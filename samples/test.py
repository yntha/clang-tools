# Autogenerated by cxx3py.
# https://github.com/yntha

from dataclasses import dataclass

def cxx3py(format):
  def wrapper(klass):
    klass.format = format

    return klass
  return wrapper

# L81: struct Il2CppStackFrameInfo {...};
@dataclass
@cxx3py("P")
class Il2CppStackFrameInfo:
  # const MethodInfo *method;
  method: int # Format: "P"


# L86: struct Il2CppMethodDebugInfo {...};
@dataclass
@cxx3py("PiP")
class Il2CppMethodDebugInfo:
  # Il2CppMethodPointer methodPointer;
  method_pointer: int # Format: "P"

  # int32_t code_size;
  code_size: int # Format: "i"

  # const char *file;
  file: int # Format: "P"


# L92: struct Il2CppMemoryCallbacks {...};
@dataclass
@cxx3py("PPPPPPP")
class Il2CppMemoryCallbacks:
  # void *(*)(int) malloc_func;
  malloc_func: int # Format: "P"

  # void *(*)(int, int) aligned_malloc_func;
  aligned_malloc_func: int # Format: "P"

  # void (*)(void *) free_func;
  free_func: int # Format: "P"

  # void (*)(void *) aligned_free_func;
  aligned_free_func: int # Format: "P"

  # void *(*)(int, int) calloc_func;
  calloc_func: int # Format: "P"

  # void *(*)(void *, int) realloc_func;
  realloc_func: int # Format: "P"

  # void *(*)(void *, int, int) aligned_realloc_func;
  aligned_realloc_func: int # Format: "P"


# L102: struct Il2CppDebuggerTransport {...};
@dataclass
@cxx3py("PPPPPPP")
class Il2CppDebuggerTransport:
  # const char *name;
  name: int # Format: "P"

  # void (*)(const char *) connect;
  connect: int # Format: "P"

  # int (*)() wait_for_attach;
  wait_for_attach: int # Format: "P"

  # void (*)() close1;
  close1: int # Format: "P"

  # void (*)() close2;
  close2: int # Format: "P"

  # int (*)(void *, int) send;
  send: int # Format: "P"

  # int (*)(void *, int) recv;
  recv: int # Format: "P"


# L134: struct Il2CppMetadataField {...};
@dataclass
@cxx3py("IIPB")
class Il2CppMetadataField:
  # uint32_t offset;
  offset: int # Format: "I"

  # uint32_t typeIndex;
  type_index: int # Format: "I"

  # const char *name;
  name: int # Format: "P"

  # uint8_t isStatic;
  is_static: int # Format: "B"


# L148: struct Il2CppMetadataType {...};
@dataclass
@cxx3py("iPIIPIPPLI")
class Il2CppMetadataType:
  # Il2CppMetadataTypeFlags flags;
  flags: Il2CppMetadataTypeFlags # Format: "i"

  # Il2CppMetadataField *fields;
  fields: int # Format: "P"

  # uint32_t fieldCount;
  field_count: int # Format: "I"

  # uint32_t staticsSize;
  statics_size: int # Format: "I"

  # uint8_t *statics;
  statics: int # Format: "P"

  # uint32_t baseOrElementTypeIndex;
  base_or_element_type_index: int # Format: "I"

  # char *name;
  name: int # Format: "P"

  # const char *assemblyName;
  assembly_name: int # Format: "P"

  # uint64_t typeInfoAddress;
  type_info_address: int # Format: "L"

  # uint32_t size;
  size: int # Format: "I"


# L161: struct Il2CppMetadataSnapshot {...};
@dataclass
@cxx3py("IP")
class Il2CppMetadataSnapshot:
  # uint32_t typeCount;
  type_count: int # Format: "I"

  # Il2CppMetadataType *types;
  types: int # Format: "P"


# L166: struct Il2CppManagedMemorySection {...};
@dataclass
@cxx3py("LIP")
class Il2CppManagedMemorySection:
  # uint64_t sectionStartAddress;
  section_start_address: int # Format: "L"

  # uint32_t sectionSize;
  section_size: int # Format: "I"

  # uint8_t *sectionBytes;
  section_bytes: int # Format: "P"


# L172: struct Il2CppManagedHeap {...};
@dataclass
@cxx3py("IP")
class Il2CppManagedHeap:
  # uint32_t sectionCount;
  section_count: int # Format: "I"

  # Il2CppManagedMemorySection *sections;
  sections: int # Format: "P"


# L177: struct Il2CppStacks {...};
@dataclass
@cxx3py("IP")
class Il2CppStacks:
  # uint32_t stackCount;
  stack_count: int # Format: "I"

  # Il2CppManagedMemorySection *stacks;
  stacks: int # Format: "P"


# L182: struct NativeObject {...};
@dataclass
@cxx3py("IIIIIP")
class NativeObject:
  # uint32_t gcHandleIndex;
  gc_handle_index: int # Format: "I"

  # uint32_t size;
  size: int # Format: "I"

  # uint32_t instanceId;
  instance_id: int # Format: "I"

  # uint32_t classId;
  class_id: int # Format: "I"

  # uint32_t referencedNativeObjectIndicesCount;
  referenced_native_object_indices_count: int # Format: "I"

  # uint32_t *referencedNativeObjectIndices;
  referenced_native_object_indices: int # Format: "P"


# L191: struct Il2CppGCHandles {...};
@dataclass
@cxx3py("IP")
class Il2CppGCHandles:
  # uint32_t trackedObjectCount;
  tracked_object_count: int # Format: "I"

  # uint64_t *pointersToObjects;
  pointers_to_objects: int # Format: "P"


# L196: struct Il2CppRuntimeInformation {...};
@dataclass
@cxx3py("IIIIII")
class Il2CppRuntimeInformation:
  # uint32_t pointerSize;
  pointer_size: int # Format: "I"

  # uint32_t objectHeaderSize;
  object_header_size: int # Format: "I"

  # uint32_t arrayHeaderSize;
  array_header_size: int # Format: "I"

  # uint32_t arrayBoundsOffsetInHeader;
  array_bounds_offset_in_header: int # Format: "I"

  # uint32_t arraySizeOffsetInHeader;
  array_size_offset_in_header: int # Format: "I"

  # uint32_t allocationGranularity;
  allocation_granularity: int # Format: "I"


# L205: struct Il2CppManagedMemorySnapshot {...};
@dataclass
@cxx3py("IPIPIPIPIIIIIIP")
class Il2CppManagedMemorySnapshot:
  # Il2CppManagedHeap heap;
  heap: Il2CppManagedHeap # Format: "IP"

  # Il2CppStacks stacks;
  stacks: Il2CppStacks # Format: "IP"

  # Il2CppMetadataSnapshot metadata;
  metadata: Il2CppMetadataSnapshot # Format: "IP"

  # Il2CppGCHandles gcHandles;
  gc_handles: Il2CppGCHandles # Format: "IP"

  # Il2CppRuntimeInformation runtimeInformation;
  runtime_information: Il2CppRuntimeInformation # Format: "IIIIII"

  # void *additionalUserInformation;
  additional_user_information: int # Format: "P"


# L344: struct Il2CppRGCTXDefinition {...};
@dataclass
@cxx3py("ii")
class Il2CppRGCTXDefinition:
  # Il2CppRGCTXDataType type;
  x_type: Il2CppRGCTXDataType # Format: "i"

  # Il2CppRGCTXDefinitionData data;
  data: Il2CppRGCTXDefinitionData # Format: "i"


# L349: struct Il2CppInterfaceOffsetPair {...};
@dataclass
@cxx3py("ii")
class Il2CppInterfaceOffsetPair:
  # TypeIndex interfaceTypeIndex;
  interface_type_index: int # Format: "i"

  # int32_t offset;
  offset: int # Format: "i"


# L354: struct Il2CppTypeDefinition {...};
@dataclass
@cxx3py("iiiiiiiiIiiiiiiiiHHHHHHHHII")
class Il2CppTypeDefinition:
  # StringIndex nameIndex;
  name_index: int # Format: "i"

  # StringIndex namespaceIndex;
  namespace_index: int # Format: "i"

  # TypeIndex byvalTypeIndex;
  byval_type_index: int # Format: "i"

  # TypeIndex byrefTypeIndex;
  byref_type_index: int # Format: "i"

  # TypeIndex declaringTypeIndex;
  declaring_type_index: int # Format: "i"

  # TypeIndex parentIndex;
  parent_index: int # Format: "i"

  # TypeIndex elementTypeIndex;
  element_type_index: int # Format: "i"

  # GenericContainerIndex genericContainerIndex;
  generic_container_index: int # Format: "i"

  # uint32_t flags;
  flags: int # Format: "I"

  # FieldIndex fieldStart;
  field_start: int # Format: "i"

  # MethodIndex methodStart;
  method_start: int # Format: "i"

  # EventIndex eventStart;
  event_start: int # Format: "i"

  # PropertyIndex propertyStart;
  property_start: int # Format: "i"

  # NestedTypeIndex nestedTypesStart;
  nested_types_start: int # Format: "i"

  # InterfacesIndex interfacesStart;
  interfaces_start: int # Format: "i"

  # VTableIndex vtableStart;
  vtable_start: int # Format: "i"

  # InterfacesIndex interfaceOffsetsStart;
  interface_offsets_start: int # Format: "i"

  # uint16_t method_count;
  method_count: int # Format: "H"

  # uint16_t property_count;
  property_count: int # Format: "H"

  # uint16_t field_count;
  field_count: int # Format: "H"

  # uint16_t event_count;
  event_count: int # Format: "H"

  # uint16_t nested_type_count;
  nested_type_count: int # Format: "H"

  # uint16_t vtable_count;
  vtable_count: int # Format: "H"

  # uint16_t interfaces_count;
  interfaces_count: int # Format: "H"

  # uint16_t interface_offsets_count;
  interface_offsets_count: int # Format: "H"

  # uint32_t bitfield;
  bitfield: int # Format: "I"

  # uint32_t token;
  token: int # Format: "I"


# L384: struct Il2CppFieldDefinition {...};
@dataclass
@cxx3py("iiI")
class Il2CppFieldDefinition:
  # StringIndex nameIndex;
  name_index: int # Format: "i"

  # TypeIndex typeIndex;
  type_index: int # Format: "i"

  # uint32_t token;
  token: int # Format: "I"


# L390: struct Il2CppFieldDefaultValue {...};
@dataclass
@cxx3py("iii")
class Il2CppFieldDefaultValue:
  # FieldIndex fieldIndex;
  field_index: int # Format: "i"

  # TypeIndex typeIndex;
  type_index: int # Format: "i"

  # DefaultValueDataIndex dataIndex;
  data_index: int # Format: "i"


# L396: struct Il2CppFieldMarshaledSize {...};
@dataclass
@cxx3py("iii")
class Il2CppFieldMarshaledSize:
  # FieldIndex fieldIndex;
  field_index: int # Format: "i"

  # TypeIndex typeIndex;
  type_index: int # Format: "i"

  # int32_t size;
  size: int # Format: "i"


# L402: struct Il2CppFieldRef {...};
@dataclass
@cxx3py("ii")
class Il2CppFieldRef:
  # TypeIndex typeIndex;
  type_index: int # Format: "i"

  # FieldIndex fieldIndex;
  field_index: int # Format: "i"


# L407: struct Il2CppParameterDefinition {...};
@dataclass
@cxx3py("iIi")
class Il2CppParameterDefinition:
  # StringIndex nameIndex;
  name_index: int # Format: "i"

  # uint32_t token;
  token: int # Format: "I"

  # TypeIndex typeIndex;
  type_index: int # Format: "i"


# L413: struct Il2CppParameterDefaultValue {...};
@dataclass
@cxx3py("iii")
class Il2CppParameterDefaultValue:
  # ParameterIndex parameterIndex;
  parameter_index: int # Format: "i"

  # TypeIndex typeIndex;
  type_index: int # Format: "i"

  # DefaultValueDataIndex dataIndex;
  data_index: int # Format: "i"


# L419: struct Il2CppMethodDefinition {...};
@dataclass
@cxx3py("iiiiiIHHHH")
class Il2CppMethodDefinition:
  # StringIndex nameIndex;
  name_index: int # Format: "i"

  # TypeDefinitionIndex declaringType;
  declaring_type: int # Format: "i"

  # TypeIndex returnType;
  return_type: int # Format: "i"

  # ParameterIndex parameterStart;
  parameter_start: int # Format: "i"

  # GenericContainerIndex genericContainerIndex;
  generic_container_index: int # Format: "i"

  # uint32_t token;
  token: int # Format: "I"

  # uint16_t flags;
  flags: int # Format: "H"

  # uint16_t iflags;
  iflags: int # Format: "H"

  # uint16_t slot;
  slot: int # Format: "H"

  # uint16_t parameterCount;
  parameter_count: int # Format: "H"


# L432: struct Il2CppEventDefinition {...};
@dataclass
@cxx3py("iiiiiI")
class Il2CppEventDefinition:
  # StringIndex nameIndex;
  name_index: int # Format: "i"

  # TypeIndex typeIndex;
  type_index: int # Format: "i"

  # MethodIndex add;
  add: int # Format: "i"

  # MethodIndex remove;
  remove: int # Format: "i"

  # MethodIndex raise;
  x_raise: int # Format: "i"

  # uint32_t token;
  token: int # Format: "I"


# L441: struct Il2CppPropertyDefinition {...};
@dataclass
@cxx3py("iiiII")
class Il2CppPropertyDefinition:
  # StringIndex nameIndex;
  name_index: int # Format: "i"

  # MethodIndex get;
  get: int # Format: "i"

  # MethodIndex set;
  x_set: int # Format: "i"

  # uint32_t attrs;
  attrs: int # Format: "I"

  # uint32_t token;
  token: int # Format: "I"


# L449: struct Il2CppMethodSpec {...};
@dataclass
@cxx3py("iii")
class Il2CppMethodSpec:
  # MethodIndex methodDefinitionIndex;
  method_definition_index: int # Format: "i"

  # GenericInstIndex classIndexIndex;
  class_index_index: int # Format: "i"

  # GenericInstIndex methodIndexIndex;
  method_index_index: int # Format: "i"


# L455: struct Il2CppStringLiteral {...};
@dataclass
@cxx3py("Ii")
class Il2CppStringLiteral:
  # uint32_t length;
  length: int # Format: "I"

  # StringLiteralIndex dataIndex;
  data_index: int # Format: "i"


# L460: struct Il2CppGenericMethodIndices {...};
@dataclass
@cxx3py("iii")
class Il2CppGenericMethodIndices:
  # MethodIndex methodIndex;
  method_index: int # Format: "i"

  # MethodIndex invokerIndex;
  invoker_index: int # Format: "i"

  # MethodIndex adjustorThunkIndex;
  adjustor_thunk_index: int # Format: "i"


# L466: struct Il2CppGenericMethodFunctionsDefinitions {...};
@dataclass
@cxx3py("iiii")
class Il2CppGenericMethodFunctionsDefinitions:
  # GenericMethodIndex genericMethodIndex;
  generic_method_index: int # Format: "i"

  # Il2CppGenericMethodIndices indices;
  indices: Il2CppGenericMethodIndices # Format: "iii"


# L472: struct Il2CppAssemblyNameDefinition {...};
@dataclass
@cxx3py("iiiIiIiiii8B")
class Il2CppAssemblyNameDefinition:
  # StringIndex nameIndex;
  name_index: int # Format: "i"

  # StringIndex cultureIndex;
  culture_index: int # Format: "i"

  # StringIndex publicKeyIndex;
  public_key_index: int # Format: "i"

  # uint32_t hash_alg;
  hash_alg: int # Format: "I"

  # int32_t hash_len;
  hash_len: int # Format: "i"

  # uint32_t flags;
  flags: int # Format: "I"

  # int32_t major;
  major: int # Format: "i"

  # int32_t minor;
  minor: int # Format: "i"

  # int32_t build;
  build: int # Format: "i"

  # int32_t revision;
  revision: int # Format: "i"

  # uint8_t[8] public_key_token;
  public_key_token: list # Format: "8B"


# L486: struct Il2CppImageDefinition {...};
@dataclass
@cxx3py("iiiIiIiIiI")
class Il2CppImageDefinition:
  # StringIndex nameIndex;
  name_index: int # Format: "i"

  # AssemblyIndex assemblyIndex;
  assembly_index: int # Format: "i"

  # TypeDefinitionIndex typeStart;
  type_start: int # Format: "i"

  # uint32_t typeCount;
  type_count: int # Format: "I"

  # TypeDefinitionIndex exportedTypeStart;
  exported_type_start: int # Format: "i"

  # uint32_t exportedTypeCount;
  exported_type_count: int # Format: "I"

  # MethodIndex entryPointIndex;
  entry_point_index: int # Format: "i"

  # uint32_t token;
  token: int # Format: "I"

  # CustomAttributeIndex customAttributeStart;
  custom_attribute_start: int # Format: "i"

  # uint32_t customAttributeCount;
  custom_attribute_count: int # Format: "I"


# L499: struct Il2CppAssemblyDefinition {...};
@dataclass
@cxx3py("iIiiiiiIiIiiii8B")
class Il2CppAssemblyDefinition:
  # ImageIndex imageIndex;
  image_index: int # Format: "i"

  # uint32_t token;
  token: int # Format: "I"

  # int32_t referencedAssemblyStart;
  referenced_assembly_start: int # Format: "i"

  # int32_t referencedAssemblyCount;
  referenced_assembly_count: int # Format: "i"

  # Il2CppAssemblyNameDefinition aname;
  aname: Il2CppAssemblyNameDefinition # Format: "iiiIiIiiii8B"


# L507: struct Il2CppMetadataUsageList {...};
@dataclass
@cxx3py("II")
class Il2CppMetadataUsageList:
  # uint32_t start;
  start: int # Format: "I"

  # uint32_t count;
  count: int # Format: "I"


# L512: struct Il2CppMetadataUsagePair {...};
@dataclass
@cxx3py("II")
class Il2CppMetadataUsagePair:
  # uint32_t destinationIndex;
  destination_index: int # Format: "I"

  # uint32_t encodedSourceIndex;
  encoded_source_index: int # Format: "I"


# L517: struct Il2CppCustomAttributeTypeRange {...};
@dataclass
@cxx3py("Iii")
class Il2CppCustomAttributeTypeRange:
  # uint32_t token;
  token: int # Format: "I"

  # int32_t start;
  start: int # Format: "i"

  # int32_t count;
  count: int # Format: "i"


# L523: struct Il2CppRange {...};
@dataclass
@cxx3py("ii")
class Il2CppRange:
  # int32_t start;
  start: int # Format: "i"

  # int32_t length;
  length: int # Format: "i"


# L528: struct Il2CppWindowsRuntimeTypeNamePair {...};
@dataclass
@cxx3py("ii")
class Il2CppWindowsRuntimeTypeNamePair:
  # StringIndex nameIndex;
  name_index: int # Format: "i"

  # TypeIndex typeIndex;
  type_index: int # Format: "i"


# L534: struct Il2CppGlobalMetadataHeader {...};
@dataclass
@cxx3py("iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii")
class Il2CppGlobalMetadataHeader:
  # int32_t sanity;
  sanity: int # Format: "i"

  # int32_t version;
  version: int # Format: "i"

  # int32_t stringLiteralOffset;
  string_literal_offset: int # Format: "i"

  # int32_t stringLiteralCount;
  string_literal_count: int # Format: "i"

  # int32_t stringLiteralDataOffset;
  string_literal_data_offset: int # Format: "i"

  # int32_t stringLiteralDataCount;
  string_literal_data_count: int # Format: "i"

  # int32_t stringOffset;
  string_offset: int # Format: "i"

  # int32_t stringCount;
  string_count: int # Format: "i"

  # int32_t eventsOffset;
  events_offset: int # Format: "i"

  # int32_t eventsCount;
  events_count: int # Format: "i"

  # int32_t propertiesOffset;
  properties_offset: int # Format: "i"

  # int32_t propertiesCount;
  properties_count: int # Format: "i"

  # int32_t methodsOffset;
  methods_offset: int # Format: "i"

  # int32_t methodsCount;
  methods_count: int # Format: "i"

  # int32_t parameterDefaultValuesOffset;
  parameter_default_values_offset: int # Format: "i"

  # int32_t parameterDefaultValuesCount;
  parameter_default_values_count: int # Format: "i"

  # int32_t fieldDefaultValuesOffset;
  field_default_values_offset: int # Format: "i"

  # int32_t fieldDefaultValuesCount;
  field_default_values_count: int # Format: "i"

  # int32_t fieldAndParameterDefaultValueDataOffset;
  field_and_parameter_default_value_data_offset: int # Format: "i"

  # int32_t fieldAndParameterDefaultValueDataCount;
  field_and_parameter_default_value_data_count: int # Format: "i"

  # int32_t fieldMarshaledSizesOffset;
  field_marshaled_sizes_offset: int # Format: "i"

  # int32_t fieldMarshaledSizesCount;
  field_marshaled_sizes_count: int # Format: "i"

  # int32_t parametersOffset;
  parameters_offset: int # Format: "i"

  # int32_t parametersCount;
  parameters_count: int # Format: "i"

  # int32_t fieldsOffset;
  fields_offset: int # Format: "i"

  # int32_t fieldsCount;
  fields_count: int # Format: "i"

  # int32_t genericParametersOffset;
  generic_parameters_offset: int # Format: "i"

  # int32_t genericParametersCount;
  generic_parameters_count: int # Format: "i"

  # int32_t genericParameterConstraintsOffset;
  generic_parameter_constraints_offset: int # Format: "i"

  # int32_t genericParameterConstraintsCount;
  generic_parameter_constraints_count: int # Format: "i"

  # int32_t genericContainersOffset;
  generic_containers_offset: int # Format: "i"

  # int32_t genericContainersCount;
  generic_containers_count: int # Format: "i"

  # int32_t nestedTypesOffset;
  nested_types_offset: int # Format: "i"

  # int32_t nestedTypesCount;
  nested_types_count: int # Format: "i"

  # int32_t interfacesOffset;
  interfaces_offset: int # Format: "i"

  # int32_t interfacesCount;
  interfaces_count: int # Format: "i"

  # int32_t vtableMethodsOffset;
  vtable_methods_offset: int # Format: "i"

  # int32_t vtableMethodsCount;
  vtable_methods_count: int # Format: "i"

  # int32_t interfaceOffsetsOffset;
  interface_offsets_offset: int # Format: "i"

  # int32_t interfaceOffsetsCount;
  interface_offsets_count: int # Format: "i"

  # int32_t typeDefinitionsOffset;
  type_definitions_offset: int # Format: "i"

  # int32_t typeDefinitionsCount;
  type_definitions_count: int # Format: "i"

  # int32_t imagesOffset;
  images_offset: int # Format: "i"

  # int32_t imagesCount;
  images_count: int # Format: "i"

  # int32_t assembliesOffset;
  assemblies_offset: int # Format: "i"

  # int32_t assembliesCount;
  assemblies_count: int # Format: "i"

  # int32_t metadataUsageListsOffset;
  metadata_usage_lists_offset: int # Format: "i"

  # int32_t metadataUsageListsCount;
  metadata_usage_lists_count: int # Format: "i"

  # int32_t metadataUsagePairsOffset;
  metadata_usage_pairs_offset: int # Format: "i"

  # int32_t metadataUsagePairsCount;
  metadata_usage_pairs_count: int # Format: "i"

  # int32_t fieldRefsOffset;
  field_refs_offset: int # Format: "i"

  # int32_t fieldRefsCount;
  field_refs_count: int # Format: "i"

  # int32_t referencedAssembliesOffset;
  referenced_assemblies_offset: int # Format: "i"

  # int32_t referencedAssembliesCount;
  referenced_assemblies_count: int # Format: "i"

  # int32_t attributesInfoOffset;
  attributes_info_offset: int # Format: "i"

  # int32_t attributesInfoCount;
  attributes_info_count: int # Format: "i"

  # int32_t attributeTypesOffset;
  attribute_types_offset: int # Format: "i"

  # int32_t attributeTypesCount;
  attribute_types_count: int # Format: "i"

  # int32_t unresolvedVirtualCallParameterTypesOffset;
  unresolved_virtual_call_parameter_types_offset: int # Format: "i"

  # int32_t unresolvedVirtualCallParameterTypesCount;
  unresolved_virtual_call_parameter_types_count: int # Format: "i"

  # int32_t unresolvedVirtualCallParameterRangesOffset;
  unresolved_virtual_call_parameter_ranges_offset: int # Format: "i"

  # int32_t unresolvedVirtualCallParameterRangesCount;
  unresolved_virtual_call_parameter_ranges_count: int # Format: "i"

  # int32_t windowsRuntimeTypeNamesOffset;
  windows_runtime_type_names_offset: int # Format: "i"

  # int32_t windowsRuntimeTypeNamesSize;
  windows_runtime_type_names_size: int # Format: "i"

  # int32_t exportedTypeDefinitionsOffset;
  exported_type_definitions_offset: int # Format: "i"

  # int32_t exportedTypeDefinitionsCount;
  exported_type_definitions_count: int # Format: "i"


# L607: struct Il2CppArrayType {...};
@dataclass
@cxx3py("PBBBPP")
class Il2CppArrayType:
  # const Il2CppType *etype;
  etype: int # Format: "P"

  # uint8_t rank;
  rank: int # Format: "B"

  # uint8_t numsizes;
  numsizes: int # Format: "B"

  # uint8_t numlobounds;
  numlobounds: int # Format: "B"

  # int *sizes;
  sizes: int # Format: "P"

  # int *lobounds;
  lobounds: int # Format: "P"


# L616: struct Il2CppGenericInst {...};
@dataclass
@cxx3py("IP")
class Il2CppGenericInst:
  # uint32_t type_argc;
  type_argc: int # Format: "I"

  # const Il2CppType **type_argv;
  type_argv: int # Format: "P"


# L621: struct Il2CppGenericContext {...};
@dataclass
@cxx3py("PP")
class Il2CppGenericContext:
  # const Il2CppGenericInst *class_inst;
  class_inst: int # Format: "P"

  # const Il2CppGenericInst *method_inst;
  method_inst: int # Format: "P"


# L626: struct Il2CppGenericParameter {...};
@dataclass
@cxx3py("iihhHH")
class Il2CppGenericParameter:
  # GenericContainerIndex ownerIndex;
  owner_index: int # Format: "i"

  # StringIndex nameIndex;
  name_index: int # Format: "i"

  # GenericParameterConstraintIndex constraintsStart;
  constraints_start: int # Format: "h"

  # int16_t constraintsCount;
  constraints_count: int # Format: "h"

  # uint16_t num;
  num: int # Format: "H"

  # uint16_t flags;
  flags: int # Format: "H"


# L635: struct Il2CppGenericContainer {...};
@dataclass
@cxx3py("iiii")
class Il2CppGenericContainer:
  # int32_t ownerIndex;
  owner_index: int # Format: "i"

  # int32_t type_argc;
  type_argc: int # Format: "i"

  # int32_t is_method;
  is_method: int # Format: "i"

  # GenericParameterIndex genericParameterStart;
  generic_parameter_start: int # Format: "i"


# L642: struct Il2CppGenericClass {...};
@dataclass
@cxx3py("iPPP")
class Il2CppGenericClass:
  # TypeDefinitionIndex typeDefinitionIndex;
  type_definition_index: int # Format: "i"

  # Il2CppGenericContext context;
  context: Il2CppGenericContext # Format: "PP"

  # Il2CppClass *cached_class;
  cached_class: int # Format: "P"


# L648: struct Il2CppGenericMethod {...};
@dataclass
@cxx3py("PPP")
class Il2CppGenericMethod:
  # const MethodInfo *methodDefinition;
  method_definition: int # Format: "P"

  # Il2CppGenericContext context;
  context: Il2CppGenericContext # Format: "PP"


# L653: struct Il2CppType {...};
@dataclass
@cxx3py("PIiIII")
class Il2CppType:
  # union <anon> {...}; data;
  data: int # Format: "P"

  # unsigned int attrs;
  # Bitfield width: 16
  attrs: None # Format: "I"

  # Il2CppTypeEnum type;
  # Bitfield width: 8
  x_type: None # Format: "i"

  # unsigned int num_mods;
  # Bitfield width: 6
  num_mods: None # Format: "I"

  # unsigned int byref;
  # Bitfield width: 1
  byref: bool # Format: "I"

  # unsigned int pinned;
  # Bitfield width: 1
  pinned: bool # Format: "I"


# L685: struct Il2CppHString__ {...};
@dataclass
@cxx3py("i")
class Il2CppHString__:
  # int unused;
  unused: int # Format: "i"


# L690: struct Il2CppHStringHeader {...};
@dataclass
@cxx3py("24B")
class Il2CppHStringHeader:
  # union <anon> {...}; Reserved;
  reserved: int # Format: "24B"


# L698: struct Il2CppGuid {...};
@dataclass
@cxx3py("IHH8B")
class Il2CppGuid:
  # uint32_t data1;
  data1: int # Format: "I"

  # uint16_t data2;
  data2: int # Format: "H"

  # uint16_t data3;
  data3: int # Format: "H"

  # uint8_t[8] data4;
  data4: list # Format: "8B"


# L705: struct Il2CppSafeArrayBound {...};
@dataclass
@cxx3py("Ii")
class Il2CppSafeArrayBound:
  # uint32_t element_count;
  element_count: int # Format: "I"

  # int32_t lower_bound;
  lower_bound: int # Format: "i"


# L710: struct Il2CppSafeArray {...};
@dataclass
@cxx3py("HHIIPIi")
class Il2CppSafeArray:
  # uint16_t dimension_count;
  dimension_count: int # Format: "H"

  # uint16_t features;
  features: int # Format: "H"

  # uint32_t element_size;
  element_size: int # Format: "I"

  # uint32_t lock_count;
  lock_count: int # Format: "I"

  # void *data;
  data: int # Format: "P"

  # Il2CppSafeArrayBound[1] bounds;
  bounds: list # Format: "Ii"


# L719: struct Il2CppWin32Decimal {...};
@dataclass
@cxx3py("HHIL")
class Il2CppWin32Decimal:
  # uint16_t reserved;
  reserved: int # Format: "H"

  # union <anon> {...}; u;
  u: int # Format: "H"

  # uint32_t hi32;
  hi32: int # Format: "I"

  # union <anon> {...}; u2;
  u2: int # Format: "L"


# L800: struct Il2CppVariant {...};
@dataclass
@cxx3py("24c")
class Il2CppVariant:
  # union <anon> {...}; n1;
  n1: int # Format: "24c"


# L865: struct Il2CppFileTime {...};
@dataclass
@cxx3py("II")
class Il2CppFileTime:
  # uint32_t low;
  low: int # Format: "I"

  # uint32_t high;
  high: int # Format: "I"


# L870: struct Il2CppStatStg {...};
@dataclass
@cxx3py("PILIIIIIIIIIHH8BII")
class Il2CppStatStg:
  # Il2CppChar *name;
  name: int # Format: "P"

  # uint32_t type;
  x_type: int # Format: "I"

  # uint64_t size;
  size: int # Format: "L"

  # Il2CppFileTime mtime;
  mtime: Il2CppFileTime # Format: "II"

  # Il2CppFileTime ctime;
  ctime: Il2CppFileTime # Format: "II"

  # Il2CppFileTime atime;
  atime: Il2CppFileTime # Format: "II"

  # uint32_t mode;
  mode: int # Format: "I"

  # uint32_t locks;
  locks: int # Format: "I"

  # Il2CppGuid clsid;
  clsid: Il2CppGuid # Format: "IHH8B"

  # uint32_t state;
  state: int # Format: "I"

  # uint32_t reserved;
  reserved: int # Format: "I"


# L890: struct Il2CppWindowsRuntimeTypeName {...};
@dataclass
@cxx3py("Piii")
class Il2CppWindowsRuntimeTypeName:
  # Il2CppHString typeName;
  type_name: int # Format: "P"

  # enum Il2CppWindowsRuntimeTypeKind typeKind;
  type_kind: enum Il2CppWindowsRuntimeTypeKind # Format: "iii"


# L899: struct Il2CppInteropData {...};
@dataclass
@cxx3py("PPPPPPP")
class Il2CppInteropData:
  # Il2CppMethodPointer delegatePInvokeWrapperFunction;
  delegate_p_invoke_wrapper_function: int # Format: "P"

  # PInvokeMarshalToNativeFunc pinvokeMarshalToNativeFunction;
  pinvoke_marshal_to_native_function: int # Format: "P"

  # PInvokeMarshalFromNativeFunc pinvokeMarshalFromNativeFunction;
  pinvoke_marshal_from_native_function: int # Format: "P"

  # PInvokeMarshalCleanupFunc pinvokeMarshalCleanupFunction;
  pinvoke_marshal_cleanup_function: int # Format: "P"

  # CreateCCWFunc createCCWFunction;
  create_ccw_function: int # Format: "P"

  # const Il2CppGuid *guid;
  guid: int # Format: "P"

  # const Il2CppType *type;
  x_type: int # Format: "P"


# L918: struct VirtualInvokeData {...};
@dataclass
@cxx3py("PP")
class VirtualInvokeData:
  # Il2CppMethodPointer methodPtr;
  method_ptr: int # Format: "P"

  # const MethodInfo *method;
  method: int # Format: "P"


# L930: struct Il2CppDefaults {...};
@dataclass
@cxx3py("PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP")
class Il2CppDefaults:
  # Il2CppImage *corlib;
  corlib: int # Format: "P"

  # Il2CppClass *object_class;
  object_class: int # Format: "P"

  # Il2CppClass *byte_class;
  byte_class: int # Format: "P"

  # Il2CppClass *void_class;
  void_class: int # Format: "P"

  # Il2CppClass *boolean_class;
  boolean_class: int # Format: "P"

  # Il2CppClass *sbyte_class;
  sbyte_class: int # Format: "P"

  # Il2CppClass *int16_class;
  int16_class: int # Format: "P"

  # Il2CppClass *uint16_class;
  uint16_class: int # Format: "P"

  # Il2CppClass *int32_class;
  int32_class: int # Format: "P"

  # Il2CppClass *uint32_class;
  uint32_class: int # Format: "P"

  # Il2CppClass *int_class;
  int_class: int # Format: "P"

  # Il2CppClass *uint_class;
  uint_class: int # Format: "P"

  # Il2CppClass *int64_class;
  int64_class: int # Format: "P"

  # Il2CppClass *uint64_class;
  uint64_class: int # Format: "P"

  # Il2CppClass *single_class;
  single_class: int # Format: "P"

  # Il2CppClass *double_class;
  double_class: int # Format: "P"

  # Il2CppClass *char_class;
  char_class: int # Format: "P"

  # Il2CppClass *string_class;
  string_class: int # Format: "P"

  # Il2CppClass *enum_class;
  enum_class: int # Format: "P"

  # Il2CppClass *array_class;
  array_class: int # Format: "P"

  # Il2CppClass *delegate_class;
  delegate_class: int # Format: "P"

  # Il2CppClass *multicastdelegate_class;
  multicastdelegate_class: int # Format: "P"

  # Il2CppClass *asyncresult_class;
  asyncresult_class: int # Format: "P"

  # Il2CppClass *manualresetevent_class;
  manualresetevent_class: int # Format: "P"

  # Il2CppClass *typehandle_class;
  typehandle_class: int # Format: "P"

  # Il2CppClass *fieldhandle_class;
  fieldhandle_class: int # Format: "P"

  # Il2CppClass *methodhandle_class;
  methodhandle_class: int # Format: "P"

  # Il2CppClass *systemtype_class;
  systemtype_class: int # Format: "P"

  # Il2CppClass *monotype_class;
  monotype_class: int # Format: "P"

  # Il2CppClass *exception_class;
  exception_class: int # Format: "P"

  # Il2CppClass *threadabortexception_class;
  threadabortexception_class: int # Format: "P"

  # Il2CppClass *thread_class;
  thread_class: int # Format: "P"

  # Il2CppClass *internal_thread_class;
  internal_thread_class: int # Format: "P"

  # Il2CppClass *appdomain_class;
  appdomain_class: int # Format: "P"

  # Il2CppClass *appdomain_setup_class;
  appdomain_setup_class: int # Format: "P"

  # Il2CppClass *field_info_class;
  field_info_class: int # Format: "P"

  # Il2CppClass *method_info_class;
  method_info_class: int # Format: "P"

  # Il2CppClass *property_info_class;
  property_info_class: int # Format: "P"

  # Il2CppClass *event_info_class;
  event_info_class: int # Format: "P"

  # Il2CppClass *mono_event_info_class;
  mono_event_info_class: int # Format: "P"

  # Il2CppClass *stringbuilder_class;
  stringbuilder_class: int # Format: "P"

  # Il2CppClass *stack_frame_class;
  stack_frame_class: int # Format: "P"

  # Il2CppClass *stack_trace_class;
  stack_trace_class: int # Format: "P"

  # Il2CppClass *marshal_class;
  marshal_class: int # Format: "P"

  # Il2CppClass *typed_reference_class;
  typed_reference_class: int # Format: "P"

  # Il2CppClass *marshalbyrefobject_class;
  marshalbyrefobject_class: int # Format: "P"

  # Il2CppClass *generic_ilist_class;
  generic_ilist_class: int # Format: "P"

  # Il2CppClass *generic_icollection_class;
  generic_icollection_class: int # Format: "P"

  # Il2CppClass *generic_ienumerable_class;
  generic_ienumerable_class: int # Format: "P"

  # Il2CppClass *generic_ireadonlylist_class;
  generic_ireadonlylist_class: int # Format: "P"

  # Il2CppClass *generic_ireadonlycollection_class;
  generic_ireadonlycollection_class: int # Format: "P"

  # Il2CppClass *runtimetype_class;
  runtimetype_class: int # Format: "P"

  # Il2CppClass *generic_nullable_class;
  generic_nullable_class: int # Format: "P"

  # Il2CppClass *il2cpp_com_object_class;
  il2cpp_com_object_class: int # Format: "P"

  # Il2CppClass *attribute_class;
  attribute_class: int # Format: "P"

  # Il2CppClass *customattribute_data_class;
  customattribute_data_class: int # Format: "P"

  # Il2CppClass *version;
  version: int # Format: "P"

  # Il2CppClass *culture_info;
  culture_info: int # Format: "P"

  # Il2CppClass *async_call_class;
  async_call_class: int # Format: "P"

  # Il2CppClass *assembly_class;
  assembly_class: int # Format: "P"

  # Il2CppClass *mono_assembly_class;
  mono_assembly_class: int # Format: "P"

  # Il2CppClass *assembly_name_class;
  assembly_name_class: int # Format: "P"

  # Il2CppClass *mono_field_class;
  mono_field_class: int # Format: "P"

  # Il2CppClass *mono_method_class;
  mono_method_class: int # Format: "P"

  # Il2CppClass *mono_method_info_class;
  mono_method_info_class: int # Format: "P"

  # Il2CppClass *mono_property_info_class;
  mono_property_info_class: int # Format: "P"

  # Il2CppClass *parameter_info_class;
  parameter_info_class: int # Format: "P"

  # Il2CppClass *mono_parameter_info_class;
  mono_parameter_info_class: int # Format: "P"

  # Il2CppClass *module_class;
  module_class: int # Format: "P"

  # Il2CppClass *pointer_class;
  pointer_class: int # Format: "P"

  # Il2CppClass *system_exception_class;
  system_exception_class: int # Format: "P"

  # Il2CppClass *argument_exception_class;
  argument_exception_class: int # Format: "P"

  # Il2CppClass *wait_handle_class;
  wait_handle_class: int # Format: "P"

  # Il2CppClass *safe_handle_class;
  safe_handle_class: int # Format: "P"

  # Il2CppClass *sort_key_class;
  sort_key_class: int # Format: "P"

  # Il2CppClass *dbnull_class;
  dbnull_class: int # Format: "P"

  # Il2CppClass *error_wrapper_class;
  error_wrapper_class: int # Format: "P"

  # Il2CppClass *missing_class;
  missing_class: int # Format: "P"

  # Il2CppClass *value_type_class;
  value_type_class: int # Format: "P"

  # Il2CppClass *threadpool_wait_callback_class;
  threadpool_wait_callback_class: int # Format: "P"

  # MethodInfo *threadpool_perform_wait_callback_method;
  threadpool_perform_wait_callback_method: int # Format: "P"

  # Il2CppClass *mono_method_message_class;
  mono_method_message_class: int # Format: "P"

  # Il2CppClass *ireference_class;
  ireference_class: int # Format: "P"

  # Il2CppClass *ireferencearray_class;
  ireferencearray_class: int # Format: "P"

  # Il2CppClass *ikey_value_pair_class;
  ikey_value_pair_class: int # Format: "P"

  # Il2CppClass *key_value_pair_class;
  key_value_pair_class: int # Format: "P"

  # Il2CppClass *windows_foundation_uri_class;
  windows_foundation_uri_class: int # Format: "P"

  # Il2CppClass *windows_foundation_iuri_runtime_class_class;
  windows_foundation_iuri_runtime_class_class: int # Format: "P"

  # Il2CppClass *system_uri_class;
  system_uri_class: int # Format: "P"

  # Il2CppClass *system_guid_class;
  system_guid_class: int # Format: "P"

  # Il2CppClass *sbyte_shared_enum;
  sbyte_shared_enum: int # Format: "P"

  # Il2CppClass *int16_shared_enum;
  int16_shared_enum: int # Format: "P"

  # Il2CppClass *int32_shared_enum;
  int32_shared_enum: int # Format: "P"

  # Il2CppClass *int64_shared_enum;
  int64_shared_enum: int # Format: "P"

  # Il2CppClass *byte_shared_enum;
  byte_shared_enum: int # Format: "P"

  # Il2CppClass *uint16_shared_enum;
  uint16_shared_enum: int # Format: "P"

  # Il2CppClass *uint32_shared_enum;
  uint32_shared_enum: int # Format: "P"

  # Il2CppClass *uint64_shared_enum;
  uint64_shared_enum: int # Format: "P"


# L1037: struct CustomAttributesCache {...};
@dataclass
@cxx3py("iP")
class CustomAttributesCache:
  # int count;
  count: int # Format: "i"

  # Il2CppObject **attributes;
  attributes: int # Format: "P"


# L1043: struct FieldInfo {...};
@dataclass
@cxx3py("PPPiI")
class FieldInfo:
  # const char *name;
  name: int # Format: "P"

  # const Il2CppType *type;
  x_type: int # Format: "P"

  # Il2CppClass *parent;
  parent: int # Format: "P"

  # int32_t offset;
  offset: int # Format: "i"

  # uint32_t token;
  token: int # Format: "I"


# L1051: struct PropertyInfo {...};
@dataclass
@cxx3py("PPPPII")
class PropertyInfo:
  # Il2CppClass *parent;
  parent: int # Format: "P"

  # const char *name;
  name: int # Format: "P"

  # const MethodInfo *get;
  get: int # Format: "P"

  # const MethodInfo *set;
  x_set: int # Format: "P"

  # uint32_t attrs;
  attrs: int # Format: "I"

  # uint32_t token;
  token: int # Format: "I"


# L1060: struct EventInfo {...};
@dataclass
@cxx3py("PPPPPPI")
class EventInfo:
  # const char *name;
  name: int # Format: "P"

  # const Il2CppType *eventType;
  event_type: int # Format: "P"

  # Il2CppClass *parent;
  parent: int # Format: "P"

  # const MethodInfo *add;
  add: int # Format: "P"

  # const MethodInfo *remove;
  remove: int # Format: "P"

  # const MethodInfo *raise;
  x_raise: int # Format: "P"

  # uint32_t token;
  token: int # Format: "I"


# L1070: struct ParameterInfo {...};
@dataclass
@cxx3py("PiIP")
class ParameterInfo:
  # const char *name;
  name: int # Format: "P"

  # int32_t position;
  position: int # Format: "i"

  # uint32_t token;
  token: int # Format: "I"

  # const Il2CppType *parameter_type;
  parameter_type: int # Format: "P"


# L1089: struct Il2CppMethodExecutionContextInfo {...};
@dataclass
@cxx3py("iii")
class Il2CppMethodExecutionContextInfo:
  # TypeIndex typeIndex;
  type_index: int # Format: "i"

  # int32_t nameIndex;
  name_index: int # Format: "i"

  # int32_t scopeIndex;
  scope_index: int # Format: "i"


# L1095: struct Il2CppMethodExecutionContextInfoIndex {...};
@dataclass
@cxx3py("ii")
class Il2CppMethodExecutionContextInfoIndex:
  # int32_t startIndex;
  start_index: int # Format: "i"

  # int32_t count;
  count: int # Format: "i"


# L1100: struct Il2CppMethodScope {...};
@dataclass
@cxx3py("ii")
class Il2CppMethodScope:
  # int32_t startOffset;
  start_offset: int # Format: "i"

  # int32_t endOffset;
  end_offset: int # Format: "i"


# L1105: struct Il2CppMethodHeaderInfo {...};
@dataclass
@cxx3py("iii")
class Il2CppMethodHeaderInfo:
  # int32_t code_size;
  code_size: int # Format: "i"

  # int32_t startScope;
  start_scope: int # Format: "i"

  # int32_t numScopes;
  num_scopes: int # Format: "i"


# L1111: struct Il2CppSequencePointSourceFile {...};
@dataclass
@cxx3py("P16B")
class Il2CppSequencePointSourceFile:
  # const char *file;
  file: int # Format: "P"

  # uint8_t[16] hash;
  x_hash: list # Format: "16B"


# L1116: struct Il2CppTypeSourceFilePair {...};
@dataclass
@cxx3py("ii")
class Il2CppTypeSourceFilePair:
  # TypeDefinitionIndex klassIndex;
  klass_index: int # Format: "i"

  # int32_t sourceFileIndex;
  source_file_index: int # Format: "i"


# L1121: struct Il2CppSequencePoint {...};
@dataclass
@cxx3py("iiiiiiiiii")
class Il2CppSequencePoint:
  # MethodIndex methodDefinitionIndex;
  method_definition_index: int # Format: "i"

  # int32_t sourceFileIndex;
  source_file_index: int # Format: "i"

  # int32_t lineStart;
  line_start: int # Format: "i"

  # int32_t lineEnd;
  line_end: int # Format: "i"

  # int32_t columnStart;
  column_start: int # Format: "i"

  # int32_t columnEnd;
  column_end: int # Format: "i"

  # int32_t ilOffset;
  il_offset: int # Format: "i"

  # SequencePointKind kind;
  kind: SequencePointKind # Format: "i"

  # int32_t isActive;
  is_active: int # Format: "i"

  # int32_t id;
  x_id: int # Format: "i"


# L1132: struct Il2CppCatchPoint {...};
@dataclass
@cxx3py("iiiii")
class Il2CppCatchPoint:
  # MethodIndex methodDefinitionIndex;
  method_definition_index: int # Format: "i"

  # TypeIndex catchTypeIndex;
  catch_type_index: int # Format: "i"

  # int32_t ilOffset;
  il_offset: int # Format: "i"

  # int32_t tryId;
  try_id: int # Format: "i"

  # int32_t parentTryId;
  parent_try_id: int # Format: "i"


# L1140: struct Il2CppDebuggerMetadataRegistration {...};
@dataclass
@cxx3py("PPPPPiPiPiPP")
class Il2CppDebuggerMetadataRegistration:
  # Il2CppMethodExecutionContextInfo *methodExecutionContextInfos;
  method_execution_context_infos: int # Format: "P"

  # Il2CppMethodExecutionContextInfoIndex *methodExecutionContextInfoIndexes;
  method_execution_context_info_indexes: int # Format: "P"

  # Il2CppMethodScope *methodScopes;
  method_scopes: int # Format: "P"

  # Il2CppMethodHeaderInfo *methodHeaderInfos;
  method_header_infos: int # Format: "P"

  # Il2CppSequencePointSourceFile *sequencePointSourceFiles;
  sequence_point_source_files: int # Format: "P"

  # int32_t numSequencePoints;
  num_sequence_points: int # Format: "i"

  # Il2CppSequencePoint *sequencePoints;
  sequence_points: int # Format: "P"

  # int32_t numCatchPoints;
  num_catch_points: int # Format: "i"

  # Il2CppCatchPoint *catchPoints;
  catch_points: int # Format: "P"

  # int32_t numTypeSourceFileEntries;
  num_type_source_file_entries: int # Format: "i"

  # Il2CppTypeSourceFilePair *typeSourceFiles;
  type_source_files: int # Format: "P"

  # const char **methodExecutionContextInfoStrings;
  method_execution_context_info_strings: int # Format: "P"


# L1162: struct MethodInfo {...};
@dataclass
@cxx3py("PPPPPPPPIHHHBBBBB")
class MethodInfo:
  # Il2CppMethodPointer methodPointer;
  method_pointer: int # Format: "P"

  # InvokerMethod invoker_method;
  invoker_method: int # Format: "P"

  # const char *name;
  name: int # Format: "P"

  # Il2CppClass *klass;
  klass: int # Format: "P"

  # const Il2CppType *return_type;
  return_type: int # Format: "P"

  # const ParameterInfo *parameters;
  parameters: int # Format: "P"

  # uint32_t token;
  token: int # Format: "I"

  # uint16_t flags;
  flags: int # Format: "H"

  # uint16_t iflags;
  iflags: int # Format: "H"

  # uint16_t slot;
  slot: int # Format: "H"

  # uint8_t parameters_count;
  parameters_count: int # Format: "B"

  # uint8_t is_generic;
  # Bitfield width: 1
  is_generic: bool # Format: "B"

  # uint8_t is_inflated;
  # Bitfield width: 1
  is_inflated: bool # Format: "B"

  # uint8_t wrapper_type;
  # Bitfield width: 1
  wrapper_type: bool # Format: "B"

  # uint8_t is_marshaled_from_native;
  # Bitfield width: 1
  is_marshaled_from_native: bool # Format: "B"


# L1191: struct Il2CppRuntimeInterfaceOffsetPair {...};
@dataclass
@cxx3py("Pi")
class Il2CppRuntimeInterfaceOffsetPair:
  # Il2CppClass *interfaceType;
  interface_type: int # Format: "P"

  # int32_t offset;
  offset: int # Format: "i"


# L1196: struct Il2CppClass {...};
@dataclass
@cxx3py("PPPPPIiIIIPIiIIIPPPPPPPPPPPPPPPPPPPIIIiiIIIiIIiIIHHHHHHHHBBBBBBBBBBBBBBBBBBBBPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP")
class Il2CppClass:
  # const Il2CppImage *image;
  image: int # Format: "P"

  # void *gc_desc;
  gc_desc: int # Format: "P"

  # const char *name;
  name: int # Format: "P"

  # const char *namespaze;
  namespaze: int # Format: "P"

  # Il2CppType byval_arg;
  byval_arg: Il2CppType # Format: "PIiIII"

  # Il2CppType this_arg;
  this_arg: Il2CppType # Format: "PIiIII"

  # Il2CppClass *element_class;
  element_class: int # Format: "P"

  # Il2CppClass *castClass;
  cast_class: int # Format: "P"

  # Il2CppClass *declaringType;
  declaring_type: int # Format: "P"

  # Il2CppClass *parent;
  parent: int # Format: "P"

  # Il2CppGenericClass *generic_class;
  generic_class: int # Format: "P"

  # const Il2CppTypeDefinition *typeDefinition;
  type_definition: int # Format: "P"

  # const Il2CppInteropData *interopData;
  interop_data: int # Format: "P"

  # Il2CppClass *klass;
  klass: int # Format: "P"

  # FieldInfo *fields;
  fields: int # Format: "P"

  # const EventInfo *events;
  events: int # Format: "P"

  # const PropertyInfo *properties;
  properties: int # Format: "P"

  # const MethodInfo **methods;
  methods: int # Format: "P"

  # Il2CppClass **nestedTypes;
  nested_types: int # Format: "P"

  # Il2CppClass **implementedInterfaces;
  implemented_interfaces: int # Format: "P"

  # Il2CppRuntimeInterfaceOffsetPair *interfaceOffsets;
  interface_offsets: int # Format: "P"

  # void *static_fields;
  static_fields: int # Format: "P"

  # const Il2CppRGCTXData *rgctx_data;
  rgctx_data: int # Format: "P"

  # struct Il2CppClass **typeHierarchy;
  type_hierarchy: int # Format: "P"

  # void *unity_user_data;
  unity_user_data: int # Format: "P"

  # uint32_t initializationExceptionGCHandle;
  initialization_exception_gc_handle: int # Format: "I"

  # uint32_t cctor_started;
  cctor_started: int # Format: "I"

  # uint32_t cctor_finished;
  cctor_finished: int # Format: "I"

  # int cctor_thread;
  cctor_thread: int # Format: "i"

  # GenericContainerIndex genericContainerIndex;
  generic_container_index: int # Format: "i"

  # uint32_t instance_size;
  instance_size: int # Format: "I"

  # uint32_t actualSize;
  actual_size: int # Format: "I"

  # uint32_t element_size;
  element_size: int # Format: "I"

  # int32_t native_size;
  native_size: int # Format: "i"

  # uint32_t static_fields_size;
  static_fields_size: int # Format: "I"

  # uint32_t thread_static_fields_size;
  thread_static_fields_size: int # Format: "I"

  # int32_t thread_static_fields_offset;
  thread_static_fields_offset: int # Format: "i"

  # uint32_t flags;
  flags: int # Format: "I"

  # uint32_t token;
  token: int # Format: "I"

  # uint16_t method_count;
  method_count: int # Format: "H"

  # uint16_t property_count;
  property_count: int # Format: "H"

  # uint16_t field_count;
  field_count: int # Format: "H"

  # uint16_t event_count;
  event_count: int # Format: "H"

  # uint16_t nested_type_count;
  nested_type_count: int # Format: "H"

  # uint16_t vtable_count;
  vtable_count: int # Format: "H"

  # uint16_t interfaces_count;
  interfaces_count: int # Format: "H"

  # uint16_t interface_offsets_count;
  interface_offsets_count: int # Format: "H"

  # uint8_t typeHierarchyDepth;
  type_hierarchy_depth: int # Format: "B"

  # uint8_t genericRecursionDepth;
  generic_recursion_depth: int # Format: "B"

  # uint8_t rank;
  rank: int # Format: "B"

  # uint8_t minimumAlignment;
  minimum_alignment: int # Format: "B"

  # uint8_t naturalAligment;
  natural_aligment: int # Format: "B"

  # uint8_t packingSize;
  packing_size: int # Format: "B"

  # uint8_t initialized_and_no_error;
  # Bitfield width: 1
  initialized_and_no_error: bool # Format: "B"

  # uint8_t valuetype;
  # Bitfield width: 1
  valuetype: bool # Format: "B"

  # uint8_t initialized;
  # Bitfield width: 1
  initialized: bool # Format: "B"

  # uint8_t enumtype;
  # Bitfield width: 1
  enumtype: bool # Format: "B"

  # uint8_t is_generic;
  # Bitfield width: 1
  is_generic: bool # Format: "B"

  # uint8_t has_references;
  # Bitfield width: 1
  has_references: bool # Format: "B"

  # uint8_t init_pending;
  # Bitfield width: 1
  init_pending: bool # Format: "B"

  # uint8_t size_inited;
  # Bitfield width: 1
  size_inited: bool # Format: "B"

  # uint8_t has_finalize;
  # Bitfield width: 1
  has_finalize: bool # Format: "B"

  # uint8_t has_cctor;
  # Bitfield width: 1
  has_cctor: bool # Format: "B"

  # uint8_t is_blittable;
  # Bitfield width: 1
  is_blittable: bool # Format: "B"

  # uint8_t is_import_or_windows_runtime;
  # Bitfield width: 1
  is_import_or_windows_runtime: bool # Format: "B"

  # uint8_t is_vtable_initialized;
  # Bitfield width: 1
  is_vtable_initialized: bool # Format: "B"

  # uint8_t has_initialization_error;
  # Bitfield width: 1
  has_initialization_error: bool # Format: "B"

  # VirtualInvokeData[32] vtable;
  vtable: list # Format: "PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP"


# L1268: struct Il2CppClass_0 {...};
@dataclass
@cxx3py("PPPPPIiIIIPIiIIIPPPPPPPPPPPPPP")
class Il2CppClass_0:
  # const Il2CppImage *image;
  image: int # Format: "P"

  # void *gc_desc;
  gc_desc: int # Format: "P"

  # const char *name;
  name: int # Format: "P"

  # const char *namespaze;
  namespaze: int # Format: "P"

  # Il2CppType byval_arg;
  byval_arg: Il2CppType # Format: "PIiIII"

  # Il2CppType this_arg;
  this_arg: Il2CppType # Format: "PIiIII"

  # Il2CppClass *element_class;
  element_class: int # Format: "P"

  # Il2CppClass *castClass;
  cast_class: int # Format: "P"

  # Il2CppClass *declaringType;
  declaring_type: int # Format: "P"

  # Il2CppClass *parent;
  parent: int # Format: "P"

  # Il2CppGenericClass *generic_class;
  generic_class: int # Format: "P"

  # const Il2CppTypeDefinition *typeDefinition;
  type_definition: int # Format: "P"

  # const Il2CppInteropData *interopData;
  interop_data: int # Format: "P"

  # Il2CppClass *klass;
  klass: int # Format: "P"

  # FieldInfo *fields;
  fields: int # Format: "P"

  # const EventInfo *events;
  events: int # Format: "P"

  # const PropertyInfo *properties;
  properties: int # Format: "P"

  # const MethodInfo **methods;
  methods: int # Format: "P"

  # Il2CppClass **nestedTypes;
  nested_types: int # Format: "P"

  # Il2CppClass **implementedInterfaces;
  implemented_interfaces: int # Format: "P"


# L1291: struct Il2CppClass_1 {...};
@dataclass
@cxx3py("PPIIIiiIIIiIIiIIHHHHHHHHBBBBBBBBBBBBBBBBBBBB")
class Il2CppClass_1:
  # struct Il2CppClass **typeHierarchy;
  type_hierarchy: int # Format: "P"

  # void *unity_user_data;
  unity_user_data: int # Format: "P"

  # uint32_t initializationExceptionGCHandle;
  initialization_exception_gc_handle: int # Format: "I"

  # uint32_t cctor_started;
  cctor_started: int # Format: "I"

  # uint32_t cctor_finished;
  cctor_finished: int # Format: "I"

  # int cctor_thread;
  cctor_thread: int # Format: "i"

  # GenericContainerIndex genericContainerIndex;
  generic_container_index: int # Format: "i"

  # uint32_t instance_size;
  instance_size: int # Format: "I"

  # uint32_t actualSize;
  actual_size: int # Format: "I"

  # uint32_t element_size;
  element_size: int # Format: "I"

  # int32_t native_size;
  native_size: int # Format: "i"

  # uint32_t static_fields_size;
  static_fields_size: int # Format: "I"

  # uint32_t thread_static_fields_size;
  thread_static_fields_size: int # Format: "I"

  # int32_t thread_static_fields_offset;
  thread_static_fields_offset: int # Format: "i"

  # uint32_t flags;
  flags: int # Format: "I"

  # uint32_t token;
  token: int # Format: "I"

  # uint16_t method_count;
  method_count: int # Format: "H"

  # uint16_t property_count;
  property_count: int # Format: "H"

  # uint16_t field_count;
  field_count: int # Format: "H"

  # uint16_t event_count;
  event_count: int # Format: "H"

  # uint16_t nested_type_count;
  nested_type_count: int # Format: "H"

  # uint16_t vtable_count;
  vtable_count: int # Format: "H"

  # uint16_t interfaces_count;
  interfaces_count: int # Format: "H"

  # uint16_t interface_offsets_count;
  interface_offsets_count: int # Format: "H"

  # uint8_t typeHierarchyDepth;
  type_hierarchy_depth: int # Format: "B"

  # uint8_t genericRecursionDepth;
  generic_recursion_depth: int # Format: "B"

  # uint8_t rank;
  rank: int # Format: "B"

  # uint8_t minimumAlignment;
  minimum_alignment: int # Format: "B"

  # uint8_t naturalAligment;
  natural_aligment: int # Format: "B"

  # uint8_t packingSize;
  packing_size: int # Format: "B"

  # uint8_t initialized_and_no_error;
  # Bitfield width: 1
  initialized_and_no_error: bool # Format: "B"

  # uint8_t valuetype;
  # Bitfield width: 1
  valuetype: bool # Format: "B"

  # uint8_t initialized;
  # Bitfield width: 1
  initialized: bool # Format: "B"

  # uint8_t enumtype;
  # Bitfield width: 1
  enumtype: bool # Format: "B"

  # uint8_t is_generic;
  # Bitfield width: 1
  is_generic: bool # Format: "B"

  # uint8_t has_references;
  # Bitfield width: 1
  has_references: bool # Format: "B"

  # uint8_t init_pending;
  # Bitfield width: 1
  init_pending: bool # Format: "B"

  # uint8_t size_inited;
  # Bitfield width: 1
  size_inited: bool # Format: "B"

  # uint8_t has_finalize;
  # Bitfield width: 1
  has_finalize: bool # Format: "B"

  # uint8_t has_cctor;
  # Bitfield width: 1
  has_cctor: bool # Format: "B"

  # uint8_t is_blittable;
  # Bitfield width: 1
  is_blittable: bool # Format: "B"

  # uint8_t is_import_or_windows_runtime;
  # Bitfield width: 1
  is_import_or_windows_runtime: bool # Format: "B"

  # uint8_t is_vtable_initialized;
  # Bitfield width: 1
  is_vtable_initialized: bool # Format: "B"

  # uint8_t has_initialization_error;
  # Bitfield width: 1
  has_initialization_error: bool # Format: "B"


# L1342: struct Il2CppClass_Merged {...};
@dataclass
@cxx3py("PPPPPIiIIIPIiIIIPPPPPPPPPPPPPPPPPPPIIIiiIIIiIIiIIHHHHHHHHBBBBBBBBBBBBBBBBBBBBPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP")
class Il2CppClass_Merged:
  # struct struct Il2CppClass_0 {...};_0;
  _0: struct Il2CppClass_0 # Format: "PPPPPIiIIIPIiIIIPPPPPPPPPPPPPP"

  # Il2CppRuntimeInterfaceOffsetPair *interfaceOffsets;
  interface_offsets: int # Format: "P"

  # void *static_fields;
  static_fields: int # Format: "P"

  # const Il2CppRGCTXData *rgctx_data;
  rgctx_data: int # Format: "P"

  # struct struct Il2CppClass_1 {...};_1;
  _1: struct Il2CppClass_1 # Format: "PPIIIiiIIIiIIiIIHHHHHHHHBBBBBBBBBBBBBBBBBBBB"

  # VirtualInvokeData[32] vtable;
  vtable: list # Format: "PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP"


# L1351: struct Il2CppTypeDefinitionSizes {...};
@dataclass
@cxx3py("IiII")
class Il2CppTypeDefinitionSizes:
  # uint32_t instance_size;
  instance_size: int # Format: "I"

  # int32_t native_size;
  native_size: int # Format: "i"

  # uint32_t static_fields_size;
  static_fields_size: int # Format: "I"

  # uint32_t thread_static_fields_size;
  thread_static_fields_size: int # Format: "I"


# L1358: struct Il2CppDomain {...};
@dataclass
@cxx3py("PPPPIiP")
class Il2CppDomain:
  # Il2CppAppDomain *domain;
  domain: int # Format: "P"

  # Il2CppAppDomainSetup *setup;
  setup: int # Format: "P"

  # Il2CppAppContext *default_context;
  default_context: int # Format: "P"

  # const char *friendly_name;
  friendly_name: int # Format: "P"

  # uint32_t domain_id;
  domain_id: int # Format: "I"

  # volatile int threadpool_jobs;
  threadpool_jobs: int # Format: "i"

  # void *agent_info;
  agent_info: int # Format: "P"


# L1368: struct Il2CppAssemblyName {...};
@dataclass
@cxx3py("PPPIiIiiii8B")
class Il2CppAssemblyName:
  # const char *name;
  name: int # Format: "P"

  # const char *culture;
  culture: int # Format: "P"

  # const uint8_t *public_key;
  public_key: int # Format: "P"

  # uint32_t hash_alg;
  hash_alg: int # Format: "I"

  # int32_t hash_len;
  hash_len: int # Format: "i"

  # uint32_t flags;
  flags: int # Format: "I"

  # int32_t major;
  major: int # Format: "i"

  # int32_t minor;
  minor: int # Format: "i"

  # int32_t build;
  build: int # Format: "i"

  # int32_t revision;
  revision: int # Format: "i"

  # uint8_t[8] public_key_token;
  public_key_token: list # Format: "8B"


# L1382: struct Il2CppImage {...};
@dataclass
@cxx3py("2fPPPIiiPPPIiIiiii8BiIiIiIiPPIB")
class Il2CppImage:
  # float[2] a;
  a: list # Format: "2f"

  # const char *name;
  name: int # Format: "P"

  # const char *nameNoExt;
  name_no_ext: int # Format: "P"

  # Il2CppAssembly assembly;
  assembly: Il2CppAssembly # Format: "PIiiPPPIiIiiii8B"

  # TypeDefinitionIndex typeStart;
  type_start: int # Format: "i"

  # uint32_t typeCount;
  type_count: int # Format: "I"

  # TypeDefinitionIndex exportedTypeStart;
  exported_type_start: int # Format: "i"

  # uint32_t exportedTypeCount;
  exported_type_count: int # Format: "I"

  # CustomAttributeIndex customAttributeStart;
  custom_attribute_start: int # Format: "i"

  # uint32_t customAttributeCount;
  custom_attribute_count: int # Format: "I"

  # MethodIndex entryPointIndex;
  entry_point_index: int # Format: "i"

  # Il2CppNameToTypeDefinitionIndexHashTable *nameToClassHashTable;
  name_to_class_hash_table: int # Format: "P"

  # const Il2CppCodeGenModule *codeGenModule;
  code_gen_module: int # Format: "P"

  # uint32_t token;
  token: int # Format: "I"

  # uint8_t dynamic;
  dynamic: int # Format: "B"


# L1400: struct Il2CppAssembly {...};
@dataclass
@cxx3py("PIiiPPPIiIiiii8B")
class Il2CppAssembly:
  # Il2CppImage *image;
  image: int # Format: "P"

  # uint32_t token;
  token: int # Format: "I"

  # int32_t referencedAssemblyStart;
  referenced_assembly_start: int # Format: "i"

  # int32_t referencedAssemblyCount;
  referenced_assembly_count: int # Format: "i"

  # Il2CppAssemblyName aname;
  aname: Il2CppAssemblyName # Format: "PPPIiIiiii8B"


# L1408: struct Il2CppCodeGenOptions {...};
@dataclass
@cxx3py("Bi")
class Il2CppCodeGenOptions:
  # uint8_t enablePrimitiveValueTypeGenericSharing;
  enable_primitive_value_type_generic_sharing: int # Format: "B"

  # int maximumRuntimeGenericDepth;
  maximum_runtime_generic_depth: int # Format: "i"


# L1413: struct Il2CppTokenIndexPair {...};
@dataclass
@cxx3py("Ii")
class Il2CppTokenIndexPair:
  # uint32_t token;
  token: int # Format: "I"

  # int32_t index;
  index: int # Format: "i"


# L1418: struct Il2CppTokenRangePair {...};
@dataclass
@cxx3py("Iii")
class Il2CppTokenRangePair:
  # uint32_t token;
  token: int # Format: "I"

  # Il2CppRange range;
  x_range: Il2CppRange # Format: "ii"


# L1423: struct Il2CppTokenIndexMethodTuple {...};
@dataclass
@cxx3py("IiPI")
class Il2CppTokenIndexMethodTuple:
  # uint32_t token;
  token: int # Format: "I"

  # int32_t index;
  index: int # Format: "i"

  # void **method;
  method: int # Format: "P"

  # uint32_t genericMethodIndex;
  generic_method_index: int # Format: "I"


# L1430: struct Il2CppTokenAdjustorThunkPair {...};
@dataclass
@cxx3py("IP")
class Il2CppTokenAdjustorThunkPair:
  # uint32_t token;
  token: int # Format: "I"

  # Il2CppMethodPointer adjustorThunk;
  adjustor_thunk: int # Format: "P"


# L1435: struct Il2CppWindowsRuntimeFactoryTableEntry {...};
@dataclass
@cxx3py("PP")
class Il2CppWindowsRuntimeFactoryTableEntry:
  # const Il2CppType *type;
  x_type: int # Format: "P"

  # Il2CppMethodPointer createFactoryFunction;
  create_factory_function: int # Format: "P"


# L1440: struct Il2CppCodeGenModule {...};
@dataclass
@cxx3py("PIPIPPIPIPIPP")
class Il2CppCodeGenModule:
  # const char *moduleName;
  module_name: int # Format: "P"

  # const uint32_t methodPointerCount;
  method_pointer_count: int # Format: "I"

  # const Il2CppMethodPointer *methodPointers;
  method_pointers: int # Format: "P"

  # const uint32_t adjustorThunkCount;
  adjustor_thunk_count: int # Format: "I"

  # const Il2CppTokenAdjustorThunkPair *adjustorThunks;
  adjustor_thunks: int # Format: "P"

  # const int32_t *invokerIndices;
  invoker_indices: int # Format: "P"

  # const uint32_t reversePInvokeWrapperCount;
  reverse_p_invoke_wrapper_count: int # Format: "I"

  # const Il2CppTokenIndexMethodTuple *reversePInvokeWrapperIndices;
  reverse_p_invoke_wrapper_indices: int # Format: "P"

  # const uint32_t rgctxRangesCount;
  rgctx_ranges_count: int # Format: "I"

  # const Il2CppTokenRangePair *rgctxRanges;
  rgctx_ranges: int # Format: "P"

  # const uint32_t rgctxsCount;
  rgctxs_count: int # Format: "I"

  # const Il2CppRGCTXDefinition *rgctxs;
  rgctxs: int # Format: "P"

  # const Il2CppDebuggerMetadataRegistration *debuggerMetadata;
  debugger_metadata: int # Format: "P"


# L1456: struct Il2CppCodeRegistration {...};
@dataclass
@cxx3py("IPIPPIPiPIPIPIPIP")
class Il2CppCodeRegistration:
  # uint32_t reversePInvokeWrapperCount;
  reverse_p_invoke_wrapper_count: int # Format: "I"

  # const Il2CppMethodPointer *reversePInvokeWrappers;
  reverse_p_invoke_wrappers: int # Format: "P"

  # uint32_t genericMethodPointersCount;
  generic_method_pointers_count: int # Format: "I"

  # const Il2CppMethodPointer *genericMethodPointers;
  generic_method_pointers: int # Format: "P"

  # const Il2CppMethodPointer *genericAdjustorThunks;
  generic_adjustor_thunks: int # Format: "P"

  # uint32_t invokerPointersCount;
  invoker_pointers_count: int # Format: "I"

  # const InvokerMethod *invokerPointers;
  invoker_pointers: int # Format: "P"

  # CustomAttributeIndex customAttributeCount;
  custom_attribute_count: int # Format: "i"

  # const CustomAttributesCacheGenerator *customAttributeGenerators;
  custom_attribute_generators: int # Format: "P"

  # uint32_t unresolvedVirtualCallCount;
  unresolved_virtual_call_count: int # Format: "I"

  # const Il2CppMethodPointer *unresolvedVirtualCallPointers;
  unresolved_virtual_call_pointers: int # Format: "P"

  # uint32_t interopDataCount;
  interop_data_count: int # Format: "I"

  # Il2CppInteropData *interopData;
  interop_data: int # Format: "P"

  # uint32_t windowsRuntimeFactoryCount;
  windows_runtime_factory_count: int # Format: "I"

  # Il2CppWindowsRuntimeFactoryTableEntry *windowsRuntimeFactoryTable;
  windows_runtime_factory_table: int # Format: "P"

  # uint32_t codeGenModulesCount;
  code_gen_modules_count: int # Format: "I"

  # const Il2CppCodeGenModule **codeGenModules;
  code_gen_modules: int # Format: "P"


# L1476: struct Il2CppMetadataRegistration {...};
@dataclass
@cxx3py("iPiPiPiPiPiPiPiP")
class Il2CppMetadataRegistration:
  # int32_t genericClassesCount;
  generic_classes_count: int # Format: "i"

  # Il2CppGenericClass *const *genericClasses;
  generic_classes: int # Format: "P"

  # int32_t genericInstsCount;
  generic_insts_count: int # Format: "i"

  # const Il2CppGenericInst *const *genericInsts;
  generic_insts: int # Format: "P"

  # int32_t genericMethodTableCount;
  generic_method_table_count: int # Format: "i"

  # const Il2CppGenericMethodFunctionsDefinitions *genericMethodTable;
  generic_method_table: int # Format: "P"

  # int32_t typesCount;
  types_count: int # Format: "i"

  # const Il2CppType *const *types;
  types: int # Format: "P"

  # int32_t methodSpecsCount;
  method_specs_count: int # Format: "i"

  # const Il2CppMethodSpec *methodSpecs;
  method_specs: int # Format: "P"

  # FieldIndex fieldOffsetsCount;
  field_offsets_count: int # Format: "i"

  # const int32_t **fieldOffsets;
  field_offsets: int # Format: "P"

  # TypeDefinitionIndex typeDefinitionsSizesCount;
  type_definitions_sizes_count: int # Format: "i"

  # const Il2CppTypeDefinitionSizes **typeDefinitionsSizes;
  type_definitions_sizes: int # Format: "P"

  # const int metadataUsagesCount;
  metadata_usages_count: int # Format: "i"

  # void **const *metadataUsages;
  metadata_usages: int # Format: "P"


# L1495: struct Il2CppPerfCounters {...};
@dataclass
@cxx3py("IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIILLII")
class Il2CppPerfCounters:
  # uint32_t jit_methods;
  jit_methods: int # Format: "I"

  # uint32_t jit_bytes;
  jit_bytes: int # Format: "I"

  # uint32_t jit_time;
  jit_time: int # Format: "I"

  # uint32_t jit_failures;
  jit_failures: int # Format: "I"

  # uint32_t exceptions_thrown;
  exceptions_thrown: int # Format: "I"

  # uint32_t exceptions_filters;
  exceptions_filters: int # Format: "I"

  # uint32_t exceptions_finallys;
  exceptions_finallys: int # Format: "I"

  # uint32_t exceptions_depth;
  exceptions_depth: int # Format: "I"

  # uint32_t aspnet_requests_queued;
  aspnet_requests_queued: int # Format: "I"

  # uint32_t aspnet_requests;
  aspnet_requests: int # Format: "I"

  # uint32_t gc_collections0;
  gc_collections0: int # Format: "I"

  # uint32_t gc_collections1;
  gc_collections1: int # Format: "I"

  # uint32_t gc_collections2;
  gc_collections2: int # Format: "I"

  # uint32_t gc_promotions0;
  gc_promotions0: int # Format: "I"

  # uint32_t gc_promotions1;
  gc_promotions1: int # Format: "I"

  # uint32_t gc_promotion_finalizers;
  gc_promotion_finalizers: int # Format: "I"

  # uint32_t gc_gen0size;
  gc_gen0size: int # Format: "I"

  # uint32_t gc_gen1size;
  gc_gen1size: int # Format: "I"

  # uint32_t gc_gen2size;
  gc_gen2size: int # Format: "I"

  # uint32_t gc_lossize;
  gc_lossize: int # Format: "I"

  # uint32_t gc_fin_survivors;
  gc_fin_survivors: int # Format: "I"

  # uint32_t gc_num_handles;
  gc_num_handles: int # Format: "I"

  # uint32_t gc_allocated;
  gc_allocated: int # Format: "I"

  # uint32_t gc_induced;
  gc_induced: int # Format: "I"

  # uint32_t gc_time;
  gc_time: int # Format: "I"

  # uint32_t gc_total_bytes;
  gc_total_bytes: int # Format: "I"

  # uint32_t gc_committed_bytes;
  gc_committed_bytes: int # Format: "I"

  # uint32_t gc_reserved_bytes;
  gc_reserved_bytes: int # Format: "I"

  # uint32_t gc_num_pinned;
  gc_num_pinned: int # Format: "I"

  # uint32_t gc_sync_blocks;
  gc_sync_blocks: int # Format: "I"

  # uint32_t remoting_calls;
  remoting_calls: int # Format: "I"

  # uint32_t remoting_channels;
  remoting_channels: int # Format: "I"

  # uint32_t remoting_proxies;
  remoting_proxies: int # Format: "I"

  # uint32_t remoting_classes;
  remoting_classes: int # Format: "I"

  # uint32_t remoting_objects;
  remoting_objects: int # Format: "I"

  # uint32_t remoting_contexts;
  remoting_contexts: int # Format: "I"

  # uint32_t loader_classes;
  loader_classes: int # Format: "I"

  # uint32_t loader_total_classes;
  loader_total_classes: int # Format: "I"

  # uint32_t loader_appdomains;
  loader_appdomains: int # Format: "I"

  # uint32_t loader_total_appdomains;
  loader_total_appdomains: int # Format: "I"

  # uint32_t loader_assemblies;
  loader_assemblies: int # Format: "I"

  # uint32_t loader_total_assemblies;
  loader_total_assemblies: int # Format: "I"

  # uint32_t loader_failures;
  loader_failures: int # Format: "I"

  # uint32_t loader_bytes;
  loader_bytes: int # Format: "I"

  # uint32_t loader_appdomains_uloaded;
  loader_appdomains_uloaded: int # Format: "I"

  # uint32_t thread_contentions;
  thread_contentions: int # Format: "I"

  # uint32_t thread_queue_len;
  thread_queue_len: int # Format: "I"

  # uint32_t thread_queue_max;
  thread_queue_max: int # Format: "I"

  # uint32_t thread_num_logical;
  thread_num_logical: int # Format: "I"

  # uint32_t thread_num_physical;
  thread_num_physical: int # Format: "I"

  # uint32_t thread_cur_recognized;
  thread_cur_recognized: int # Format: "I"

  # uint32_t thread_num_recognized;
  thread_num_recognized: int # Format: "I"

  # uint32_t interop_num_ccw;
  interop_num_ccw: int # Format: "I"

  # uint32_t interop_num_stubs;
  interop_num_stubs: int # Format: "I"

  # uint32_t interop_num_marshals;
  interop_num_marshals: int # Format: "I"

  # uint32_t security_num_checks;
  security_num_checks: int # Format: "I"

  # uint32_t security_num_link_checks;
  security_num_link_checks: int # Format: "I"

  # uint32_t security_time;
  security_time: int # Format: "I"

  # uint32_t security_depth;
  security_depth: int # Format: "I"

  # uint32_t unused;
  unused: int # Format: "I"

  # uint64_t threadpool_workitems;
  threadpool_workitems: int # Format: "L"

  # uint64_t threadpool_ioworkitems;
  threadpool_ioworkitems: int # Format: "L"

  # unsigned int threadpool_threads;
  threadpool_threads: int # Format: "I"

  # unsigned int threadpool_iothreads;
  threadpool_iothreads: int # Format: "I"


# L1580: struct Il2CppObject {...};
@dataclass
@cxx3py("PP")
class Il2CppObject:
  # MonitorData *monitor;
  monitor: int # Format: "P"


# L1590: struct Il2CppArrayBounds {...};
@dataclass
@cxx3py("Li")
class Il2CppArrayBounds:
  # il2cpp_array_size_t length;
  length: int # Format: "L"

  # il2cpp_array_lower_bound_t lower_bound;
  lower_bound: int # Format: "i"


# L1595: struct Il2CppArray {...};
@dataclass
@cxx3py("PPPL")
class Il2CppArray:
  # Il2CppObject obj;
  obj: Il2CppObject # Format: "PP"

  # Il2CppArrayBounds *bounds;
  bounds: int # Format: "P"

  # il2cpp_array_size_t max_length;
  max_length: int # Format: "L"


# L1601: struct Il2CppArraySize {...};
@dataclass
@cxx3py("PPPL32P")
class Il2CppArraySize:
  # Il2CppObject obj;
  obj: Il2CppObject # Format: "PP"

  # Il2CppArrayBounds *bounds;
  bounds: int # Format: "P"

  # il2cpp_array_size_t max_length;
  max_length: int # Format: "L"

  # void *[32] vector;
  vector: list # Format: "32P"


# L1608: struct Il2CppString {...};
@dataclass
@cxx3py("PPi32H")
class Il2CppString:
  # Il2CppObject object;
  x_object: Il2CppObject # Format: "PP"

  # int32_t length;
  length: int # Format: "i"

  # Il2CppChar[32] chars;
  chars: list # Format: "32H"


# L1614: struct Il2CppReflectionType {...};
@dataclass
@cxx3py("PPP")
class Il2CppReflectionType:
  # Il2CppObject object;
  x_object: Il2CppObject # Format: "PP"

  # const Il2CppType *type;
  x_type: int # Format: "P"


# L1619: struct Il2CppReflectionRuntimeType {...};
@dataclass
@cxx3py("PPPPPP")
class Il2CppReflectionRuntimeType:
  # Il2CppReflectionType type;
  x_type: Il2CppReflectionType # Format: "PPP"

  # Il2CppObject *type_info;
  type_info: int # Format: "P"

  # Il2CppObject *genericCache;
  generic_cache: int # Format: "P"

  # Il2CppObject *serializationCtor;
  serialization_ctor: int # Format: "P"


# L1626: struct Il2CppReflectionMonoType {...};
@dataclass
@cxx3py("PPPPPP")
class Il2CppReflectionMonoType:
  # Il2CppReflectionRuntimeType type;
  x_type: Il2CppReflectionRuntimeType # Format: "PPPPPP"


# L1630: struct Il2CppReflectionEvent {...};
@dataclass
@cxx3py("PPP")
class Il2CppReflectionEvent:
  # Il2CppObject object;
  x_object: Il2CppObject # Format: "PP"

  # Il2CppObject *cached_add_event;
  cached_add_event: int # Format: "P"


# L1635: struct Il2CppReflectionMonoEvent {...};
@dataclass
@cxx3py("PPPPP")
class Il2CppReflectionMonoEvent:
  # Il2CppReflectionEvent event;
  event: Il2CppReflectionEvent # Format: "PPP"

  # Il2CppReflectionType *reflectedType;
  reflected_type: int # Format: "P"

  # const EventInfo *eventInfo;
  event_info: int # Format: "P"


# L1641: struct Il2CppReflectionMonoEventInfo {...};
@dataclass
@cxx3py("PPPPPPIP")
class Il2CppReflectionMonoEventInfo:
  # Il2CppReflectionType *declaringType;
  declaring_type: int # Format: "P"

  # Il2CppReflectionType *reflectedType;
  reflected_type: int # Format: "P"

  # Il2CppString *name;
  name: int # Format: "P"

  # Il2CppReflectionMethod *addMethod;
  add_method: int # Format: "P"

  # Il2CppReflectionMethod *removeMethod;
  remove_method: int # Format: "P"

  # Il2CppReflectionMethod *raiseMethod;
  raise_method: int # Format: "P"

  # uint32_t eventAttributes;
  event_attributes: int # Format: "I"

  # Il2CppArray *otherMethods;
  other_methods: int # Format: "P"


# L1652: struct Il2CppReflectionField {...};
@dataclass
@cxx3py("PPPPPPI")
class Il2CppReflectionField:
  # Il2CppObject object;
  x_object: Il2CppObject # Format: "PP"

  # Il2CppClass *klass;
  klass: int # Format: "P"

  # FieldInfo *field;
  field: int # Format: "P"

  # Il2CppString *name;
  name: int # Format: "P"

  # Il2CppReflectionType *type;
  x_type: int # Format: "P"

  # uint32_t attrs;
  attrs: int # Format: "I"


# L1661: struct Il2CppReflectionProperty {...};
@dataclass
@cxx3py("PPPP")
class Il2CppReflectionProperty:
  # Il2CppObject object;
  x_object: Il2CppObject # Format: "PP"

  # Il2CppClass *klass;
  klass: int # Format: "P"

  # const PropertyInfo *property;
  x_property: int # Format: "P"


# L1667: struct Il2CppReflectionMethod {...};
@dataclass
@cxx3py("PPPPP")
class Il2CppReflectionMethod:
  # Il2CppObject object;
  x_object: Il2CppObject # Format: "PP"

  # const MethodInfo *method;
  method: int # Format: "P"

  # Il2CppString *name;
  name: int # Format: "P"

  # Il2CppReflectionType *reftype;
  reftype: int # Format: "P"


# L1674: struct Il2CppReflectionGenericMethod {...};
@dataclass
@cxx3py("PPPPP")
class Il2CppReflectionGenericMethod:
  # Il2CppReflectionMethod base;
  base: Il2CppReflectionMethod # Format: "PPPPP"


# L1678: struct Il2CppMethodInfo {...};
@dataclass
@cxx3py("PPIII")
class Il2CppMethodInfo:
  # Il2CppReflectionType *parent;
  parent: int # Format: "P"

  # Il2CppReflectionType *ret;
  ret: int # Format: "P"

  # uint32_t attrs;
  attrs: int # Format: "I"

  # uint32_t implattrs;
  implattrs: int # Format: "I"

  # uint32_t callconv;
  callconv: int # Format: "I"


# L1686: struct Il2CppPropertyInfo {...};
@dataclass
@cxx3py("PPPPPI")
class Il2CppPropertyInfo:
  # Il2CppReflectionType *parent;
  parent: int # Format: "P"

  # Il2CppReflectionType *declaringType;
  declaring_type: int # Format: "P"

  # Il2CppString *name;
  name: int # Format: "P"

  # Il2CppReflectionMethod *get;
  get: int # Format: "P"

  # Il2CppReflectionMethod *set;
  x_set: int # Format: "P"

  # uint32_t attrs;
  attrs: int # Format: "I"


# L1695: struct Il2CppReflectionParameter {...};
@dataclass
@cxx3py("PPPPPPiIP")
class Il2CppReflectionParameter:
  # Il2CppObject object;
  x_object: Il2CppObject # Format: "PP"

  # Il2CppReflectionType *ClassImpl;
  class_impl: int # Format: "P"

  # Il2CppObject *DefaultValueImpl;
  default_value_impl: int # Format: "P"

  # Il2CppObject *MemberImpl;
  member_impl: int # Format: "P"

  # Il2CppString *NameImpl;
  name_impl: int # Format: "P"

  # int32_t PositionImpl;
  position_impl: int # Format: "i"

  # uint32_t AttrsImpl;
  attrs_impl: int # Format: "I"

  # Il2CppObject *MarshalAsImpl;
  marshal_as_impl: int # Format: "P"


# L1706: struct Il2CppReflectionModule {...};
@dataclass
@cxx3py("PPPPPPPBI")
class Il2CppReflectionModule:
  # Il2CppObject obj;
  obj: Il2CppObject # Format: "PP"

  # const Il2CppImage *image;
  image: int # Format: "P"

  # Il2CppReflectionAssembly *assembly;
  assembly: int # Format: "P"

  # Il2CppString *fqname;
  fqname: int # Format: "P"

  # Il2CppString *name;
  name: int # Format: "P"

  # Il2CppString *scopename;
  scopename: int # Format: "P"

  # uint8_t is_resource;
  is_resource: int # Format: "B"

  # uint32_t token;
  token: int # Format: "I"


# L1717: struct Il2CppReflectionAssemblyName {...};
@dataclass
@cxx3py("PPPPiiiiPIIPPPIPII")
class Il2CppReflectionAssemblyName:
  # Il2CppObject obj;
  obj: Il2CppObject # Format: "PP"

  # Il2CppString *name;
  name: int # Format: "P"

  # Il2CppString *codebase;
  codebase: int # Format: "P"

  # int32_t major;
  major: int # Format: "i"

  # int32_t minor;
  minor: int # Format: "i"

  # int32_t build;
  build: int # Format: "i"

  # int32_t revision;
  revision: int # Format: "i"

  # Il2CppObject *cultureInfo;
  culture_info: int # Format: "P"

  # uint32_t flags;
  flags: int # Format: "I"

  # uint32_t hashalg;
  hashalg: int # Format: "I"

  # Il2CppObject *keypair;
  keypair: int # Format: "P"

  # Il2CppArray *publicKey;
  public_key: int # Format: "P"

  # Il2CppArray *keyToken;
  key_token: int # Format: "P"

  # uint32_t versioncompat;
  versioncompat: int # Format: "I"

  # Il2CppObject *version;
  version: int # Format: "P"

  # uint32_t processor_architecture;
  processor_architecture: int # Format: "I"

  # uint32_t contentType;
  content_type: int # Format: "I"


# L1734: struct Il2CppReflectionAssembly {...};
@dataclass
@cxx3py("PPPPPPPPPPBP")
class Il2CppReflectionAssembly:
  # Il2CppObject object;
  x_object: Il2CppObject # Format: "PP"

  # const Il2CppAssembly *assembly;
  assembly: int # Format: "P"

  # Il2CppObject *resolve_event_holder;
  resolve_event_holder: int # Format: "P"

  # Il2CppObject *evidence;
  evidence: int # Format: "P"

  # Il2CppObject *minimum;
  minimum: int # Format: "P"

  # Il2CppObject *optional;
  optional: int # Format: "P"

  # Il2CppObject *refuse;
  refuse: int # Format: "P"

  # Il2CppObject *granted;
  granted: int # Format: "P"

  # Il2CppObject *denied;
  denied: int # Format: "P"

  # uint8_t from_byte_array;
  from_byte_array: int # Format: "B"

  # Il2CppString *name;
  name: int # Format: "P"


# L1748: struct Il2CppReflectionMarshal {...};
@dataclass
@cxx3py("PPiiiPPPPiB")
class Il2CppReflectionMarshal:
  # Il2CppObject object;
  x_object: Il2CppObject # Format: "PP"

  # int32_t count;
  count: int # Format: "i"

  # int32_t type;
  x_type: int # Format: "i"

  # int32_t eltype;
  eltype: int # Format: "i"

  # Il2CppString *guid;
  guid: int # Format: "P"

  # Il2CppString *mcookie;
  mcookie: int # Format: "P"

  # Il2CppString *marshaltype;
  marshaltype: int # Format: "P"

  # Il2CppObject *marshaltyperef;
  marshaltyperef: int # Format: "P"

  # int32_t param_num;
  param_num: int # Format: "i"

  # uint8_t has_size;
  has_size: int # Format: "B"


# L1761: struct Il2CppReflectionPointer {...};
@dataclass
@cxx3py("PPPP")
class Il2CppReflectionPointer:
  # Il2CppObject object;
  x_object: Il2CppObject # Format: "PP"

  # void *data;
  data: int # Format: "P"

  # Il2CppReflectionType *type;
  x_type: int # Format: "P"


# L1767: struct Il2CppInternalThread {...};
@dataclass
@cxx3py("PPiPPPPiIPiLlPPPPPiPiPBBiBiiIPPlPPiPPiiiP")
class Il2CppInternalThread:
  # Il2CppObject obj;
  obj: Il2CppObject # Format: "PP"

  # int lock_thread_id;
  lock_thread_id: int # Format: "i"

  # void *handle;
  handle: int # Format: "P"

  # void *native_handle;
  native_handle: int # Format: "P"

  # Il2CppArray *cached_culture_info;
  cached_culture_info: int # Format: "P"

  # Il2CppChar *name;
  name: int # Format: "P"

  # int name_len;
  name_len: int # Format: "i"

  # uint32_t state;
  state: int # Format: "I"

  # Il2CppObject *abort_exc;
  abort_exc: int # Format: "P"

  # int abort_state_handle;
  abort_state_handle: int # Format: "i"

  # uint64_t tid;
  tid: int # Format: "L"

  # intptr_t debugger_thread;
  debugger_thread: int # Format: "l"

  # void **static_data;
  static_data: int # Format: "P"

  # void *runtime_thread_info;
  runtime_thread_info: int # Format: "P"

  # Il2CppObject *current_appcontext;
  current_appcontext: int # Format: "P"

  # Il2CppObject *root_domain_thread;
  root_domain_thread: int # Format: "P"

  # Il2CppArray *_serialized_principal;
  _serialized_principal: int # Format: "P"

  # int _serialized_principal_version;
  _serialized_principal_version: int # Format: "i"

  # void *appdomain_refs;
  appdomain_refs: int # Format: "P"

  # int32_t interruption_requested;
  interruption_requested: int # Format: "i"

  # void *synch_cs;
  synch_cs: int # Format: "P"

  # uint8_t threadpool_thread;
  threadpool_thread: int # Format: "B"

  # uint8_t thread_interrupt_requested;
  thread_interrupt_requested: int # Format: "B"

  # int stack_size;
  stack_size: int # Format: "i"

  # uint8_t apartment_state;
  apartment_state: int # Format: "B"

  # int critical_region_level;
  critical_region_level: int # Format: "i"

  # int managed_id;
  managed_id: int # Format: "i"

  # uint32_t small_id;
  small_id: int # Format: "I"

  # void *manage_callback;
  manage_callback: int # Format: "P"

  # void *interrupt_on_stop;
  interrupt_on_stop: int # Format: "P"

  # intptr_t flags;
  flags: int # Format: "l"

  # void *thread_pinning_ref;
  thread_pinning_ref: int # Format: "P"

  # void *abort_protected_block_count;
  abort_protected_block_count: int # Format: "P"

  # int32_t priority;
  priority: int # Format: "i"

  # void *owned_mutexes;
  owned_mutexes: int # Format: "P"

  # void *suspended;
  suspended: int # Format: "P"

  # int32_t self_suspended;
  self_suspended: int # Format: "i"

  # int thread_state;
  thread_state: int # Format: "i"

  # int unused2;
  unused2: int # Format: "i"

  # void *last;
  last: int # Format: "P"


# L1810: struct Il2CppIOSelectorJob {...};
@dataclass
@cxx3py("PPiPP")
class Il2CppIOSelectorJob:
  # Il2CppObject object;
  x_object: Il2CppObject # Format: "PP"

  # int32_t operation;
  operation: int # Format: "i"

  # Il2CppObject *callback;
  callback: int # Format: "P"

  # Il2CppObject *state;
  state: int # Format: "P"


# L1824: struct Il2CppMethodMessage {...};
@dataclass
@cxx3py("PPPPPPPPPPI")
class Il2CppMethodMessage:
  # Il2CppObject obj;
  obj: Il2CppObject # Format: "PP"

  # Il2CppReflectionMethod *method;
  method: int # Format: "P"

  # Il2CppArray *args;
  args: int # Format: "P"

  # Il2CppArray *names;
  names: int # Format: "P"

  # Il2CppArray *arg_types;
  arg_types: int # Format: "P"

  # Il2CppObject *ctx;
  ctx: int # Format: "P"

  # Il2CppObject *rval;
  rval: int # Format: "P"

  # Il2CppObject *exc;
  exc: int # Format: "P"

  # Il2CppAsyncResult *async_result;
  async_result: int # Format: "P"

  # uint32_t call_type;
  call_type: int # Format: "I"


# L1837: struct Il2CppAppDomainSetup {...};
@dataclass
@cxx3py("PPPPPPPPPPPPBBiBBPPPPBPP")
class Il2CppAppDomainSetup:
  # Il2CppObject object;
  x_object: Il2CppObject # Format: "PP"

  # Il2CppString *application_base;
  application_base: int # Format: "P"

  # Il2CppString *application_name;
  application_name: int # Format: "P"

  # Il2CppString *cache_path;
  cache_path: int # Format: "P"

  # Il2CppString *configuration_file;
  configuration_file: int # Format: "P"

  # Il2CppString *dynamic_base;
  dynamic_base: int # Format: "P"

  # Il2CppString *license_file;
  license_file: int # Format: "P"

  # Il2CppString *private_bin_path;
  private_bin_path: int # Format: "P"

  # Il2CppString *private_bin_path_probe;
  private_bin_path_probe: int # Format: "P"

  # Il2CppString *shadow_copy_directories;
  shadow_copy_directories: int # Format: "P"

  # Il2CppString *shadow_copy_files;
  shadow_copy_files: int # Format: "P"

  # uint8_t publisher_policy;
  publisher_policy: int # Format: "B"

  # uint8_t path_changed;
  path_changed: int # Format: "B"

  # int loader_optimization;
  loader_optimization: int # Format: "i"

  # uint8_t disallow_binding_redirects;
  disallow_binding_redirects: int # Format: "B"

  # uint8_t disallow_code_downloads;
  disallow_code_downloads: int # Format: "B"

  # Il2CppObject *activation_arguments;
  activation_arguments: int # Format: "P"

  # Il2CppObject *domain_initializer;
  domain_initializer: int # Format: "P"

  # Il2CppObject *application_trust;
  application_trust: int # Format: "P"

  # Il2CppArray *domain_initializer_args;
  domain_initializer_args: int # Format: "P"

  # uint8_t disallow_appbase_probe;
  disallow_appbase_probe: int # Format: "B"

  # Il2CppArray *configuration_bytes;
  configuration_bytes: int # Format: "P"

  # Il2CppArray *serialized_non_primitives;
  serialized_non_primitives: int # Format: "P"


# L1863: struct Il2CppThread {...};
@dataclass
@cxx3py("PPPPPPiPPB")
class Il2CppThread:
  # Il2CppObject obj;
  obj: Il2CppObject # Format: "PP"

  # Il2CppInternalThread *internal_thread;
  internal_thread: int # Format: "P"

  # Il2CppObject *start_obj;
  start_obj: int # Format: "P"

  # Il2CppException *pending_exception;
  pending_exception: int # Format: "P"

  # Il2CppObject *principal;
  principal: int # Format: "P"

  # int32_t principal_version;
  principal_version: int # Format: "i"

  # Il2CppDelegate *delegate;
  delegate: int # Format: "P"

  # Il2CppObject *executionContext;
  execution_context: int # Format: "P"

  # uint8_t executionContextBelongsToOuterScope;
  execution_context_belongs_to_outer_scope: int # Format: "B"


# L1875: struct Il2CppException {...};
@dataclass
@cxx3py("PPPPPPPPPPiPiPPPP")
class Il2CppException:
  # Il2CppObject object;
  x_object: Il2CppObject # Format: "PP"

  # Il2CppString *className;
  class_name: int # Format: "P"

  # Il2CppString *message;
  message: int # Format: "P"

  # Il2CppObject *_data;
  _data: int # Format: "P"

  # struct Il2CppException *inner_ex;
  inner_ex: int # Format: "P"

  # Il2CppString *_helpURL;
  _help_url: int # Format: "P"

  # Il2CppArray *trace_ips;
  trace_ips: int # Format: "P"

  # Il2CppString *stack_trace;
  stack_trace: int # Format: "P"

  # Il2CppString *remote_stack_trace;
  remote_stack_trace: int # Format: "P"

  # int remote_stack_index;
  remote_stack_index: int # Format: "i"

  # Il2CppObject *_dynamicMethods;
  _dynamic_methods: int # Format: "P"

  # il2cpp_hresult_t hresult;
  hresult: int # Format: "i"

  # Il2CppString *source;
  source: int # Format: "P"

  # Il2CppObject *safeSerializationManager;
  safe_serialization_manager: int # Format: "P"

  # Il2CppArray *captured_traces;
  captured_traces: int # Format: "P"

  # Il2CppArray *native_trace_ips;
  native_trace_ips: int # Format: "P"


# L1894: struct Il2CppSystemException {...};
@dataclass
@cxx3py("PPPPPPPPPPiPiPPPP")
class Il2CppSystemException:
  # Il2CppException base;
  base: Il2CppException # Format: "PPPPPPPPPPiPiPPPP"


# L1898: struct Il2CppArgumentException {...};
@dataclass
@cxx3py("PPPPPPPPPPiPiPPPPP")
class Il2CppArgumentException:
  # Il2CppException base;
  base: Il2CppException # Format: "PPPPPPPPPPiPiPPPP"

  # Il2CppString *argName;
  arg_name: int # Format: "P"


# L1903: struct Il2CppTypedRef {...};
@dataclass
@cxx3py("PPP")
class Il2CppTypedRef:
  # const Il2CppType *type;
  x_type: int # Format: "P"

  # void *value;
  value: int # Format: "P"

  # Il2CppClass *klass;
  klass: int # Format: "P"


# L1909: struct Il2CppDelegate {...};
@dataclass
@cxx3py("PPPPPPPlPPPPB")
class Il2CppDelegate:
  # Il2CppObject object;
  x_object: Il2CppObject # Format: "PP"

  # Il2CppMethodPointer method_ptr;
  method_ptr: int # Format: "P"

  # InvokerMethod invoke_impl;
  invoke_impl: int # Format: "P"

  # Il2CppObject *target;
  target: int # Format: "P"

  # const MethodInfo *method;
  method: int # Format: "P"

  # void *delegate_trampoline;
  delegate_trampoline: int # Format: "P"

  # intptr_t extraArg;
  extra_arg: int # Format: "l"

  # uint8_t **method_code;
  method_code: int # Format: "P"

  # Il2CppReflectionMethod *method_info;
  method_info: int # Format: "P"

  # Il2CppReflectionMethod *original_method_info;
  original_method_info: int # Format: "P"

  # Il2CppObject *data;
  data: int # Format: "P"

  # uint8_t method_is_virtual;
  method_is_virtual: int # Format: "B"


# L1924: struct Il2CppMulticastDelegate {...};
@dataclass
@cxx3py("PPPPPPPlPPPPBP")
class Il2CppMulticastDelegate:
  # Il2CppDelegate delegate;
  delegate: Il2CppDelegate # Format: "PPPPPPPlPPPPB"

  # Il2CppArray *delegates;
  delegates: int # Format: "P"


# L1929: struct Il2CppMarshalByRefObject {...};
@dataclass
@cxx3py("PPP")
class Il2CppMarshalByRefObject:
  # Il2CppObject obj;
  obj: Il2CppObject # Format: "PP"

  # Il2CppObject *identity;
  identity: int # Format: "P"


# L1934: struct Il2CppAppDomain {...};
@dataclass
@cxx3py("PPPP")
class Il2CppAppDomain:
  # Il2CppMarshalByRefObject mbr;
  mbr: Il2CppMarshalByRefObject # Format: "PPP"

  # Il2CppDomain *data;
  data: int # Format: "P"


# L1939: struct Il2CppStackFrame {...};
@dataclass
@cxx3py("PPiiLIPPiiP")
class Il2CppStackFrame:
  # Il2CppObject obj;
  obj: Il2CppObject # Format: "PP"

  # int32_t il_offset;
  il_offset: int # Format: "i"

  # int32_t native_offset;
  native_offset: int # Format: "i"

  # uint64_t methodAddress;
  method_address: int # Format: "L"

  # uint32_t methodIndex;
  method_index: int # Format: "I"

  # Il2CppReflectionMethod *method;
  method: int # Format: "P"

  # Il2CppString *filename;
  filename: int # Format: "P"

  # int32_t line;
  line: int # Format: "i"

  # int32_t column;
  column: int # Format: "i"

  # Il2CppString *internal_method_name;
  internal_method_name: int # Format: "P"


# L1952: struct Il2CppDateTimeFormatInfo {...};
@dataclass
@cxx3py("PPPPPPPPPPPPPPPPIIPPPPPPPPPPPPPPPPPPPPPPPBiiBBiBPPPP")
class Il2CppDateTimeFormatInfo:
  # Il2CppObject obj;
  obj: Il2CppObject # Format: "PP"

  # Il2CppObject *CultureData;
  culture_data: int # Format: "P"

  # Il2CppString *Name;
  name: int # Format: "P"

  # Il2CppString *LangName;
  lang_name: int # Format: "P"

  # Il2CppObject *CompareInfo;
  compare_info: int # Format: "P"

  # Il2CppObject *CultureInfo;
  culture_info: int # Format: "P"

  # Il2CppString *AMDesignator;
  am_designator: int # Format: "P"

  # Il2CppString *PMDesignator;
  pm_designator: int # Format: "P"

  # Il2CppString *DateSeparator;
  date_separator: int # Format: "P"

  # Il2CppString *GeneralShortTimePattern;
  general_short_time_pattern: int # Format: "P"

  # Il2CppString *GeneralLongTimePattern;
  general_long_time_pattern: int # Format: "P"

  # Il2CppString *TimeSeparator;
  time_separator: int # Format: "P"

  # Il2CppString *MonthDayPattern;
  month_day_pattern: int # Format: "P"

  # Il2CppString *DateTimeOffsetPattern;
  date_time_offset_pattern: int # Format: "P"

  # Il2CppObject *Calendar;
  calendar: int # Format: "P"

  # uint32_t FirstDayOfWeek;
  first_day_of_week: int # Format: "I"

  # uint32_t CalendarWeekRule;
  calendar_week_rule: int # Format: "I"

  # Il2CppString *FullDateTimePattern;
  full_date_time_pattern: int # Format: "P"

  # Il2CppArray *AbbreviatedDayNames;
  abbreviated_day_names: int # Format: "P"

  # Il2CppArray *ShortDayNames;
  short_day_names: int # Format: "P"

  # Il2CppArray *DayNames;
  day_names: int # Format: "P"

  # Il2CppArray *AbbreviatedMonthNames;
  abbreviated_month_names: int # Format: "P"

  # Il2CppArray *MonthNames;
  month_names: int # Format: "P"

  # Il2CppArray *GenitiveMonthNames;
  genitive_month_names: int # Format: "P"

  # Il2CppArray *GenitiveAbbreviatedMonthNames;
  genitive_abbreviated_month_names: int # Format: "P"

  # Il2CppArray *LeapYearMonthNames;
  leap_year_month_names: int # Format: "P"

  # Il2CppString *LongDatePattern;
  long_date_pattern: int # Format: "P"

  # Il2CppString *ShortDatePattern;
  short_date_pattern: int # Format: "P"

  # Il2CppString *YearMonthPattern;
  year_month_pattern: int # Format: "P"

  # Il2CppString *LongTimePattern;
  long_time_pattern: int # Format: "P"

  # Il2CppString *ShortTimePattern;
  short_time_pattern: int # Format: "P"

  # Il2CppArray *YearMonthPatterns;
  year_month_patterns: int # Format: "P"

  # Il2CppArray *ShortDatePatterns;
  short_date_patterns: int # Format: "P"

  # Il2CppArray *LongDatePatterns;
  long_date_patterns: int # Format: "P"

  # Il2CppArray *ShortTimePatterns;
  short_time_patterns: int # Format: "P"

  # Il2CppArray *LongTimePatterns;
  long_time_patterns: int # Format: "P"

  # Il2CppArray *EraNames;
  era_names: int # Format: "P"

  # Il2CppArray *AbbrevEraNames;
  abbrev_era_names: int # Format: "P"

  # Il2CppArray *AbbrevEnglishEraNames;
  abbrev_english_era_names: int # Format: "P"

  # Il2CppArray *OptionalCalendars;
  optional_calendars: int # Format: "P"

  # uint8_t readOnly;
  read_only: int # Format: "B"

  # int32_t FormatFlags;
  format_flags: int # Format: "i"

  # int32_t CultureID;
  culture_id: int # Format: "i"

  # uint8_t UseUserOverride;
  use_user_override: int # Format: "B"

  # uint8_t UseCalendarInfo;
  use_calendar_info: int # Format: "B"

  # int32_t DataItem;
  data_item: int # Format: "i"

  # uint8_t IsDefaultCalendar;
  is_default_calendar: int # Format: "B"

  # Il2CppArray *DateWords;
  date_words: int # Format: "P"

  # Il2CppString *FullTimeSpanPositivePattern;
  full_time_span_positive_pattern: int # Format: "P"

  # Il2CppString *FullTimeSpanNegativePattern;
  full_time_span_negative_pattern: int # Format: "P"

  # Il2CppArray *dtfiTokenHash;
  dtfi_token_hash: int # Format: "P"


# L2006: struct Il2CppNumberFormatInfo {...};
@dataclass
@cxx3py("PPPPPPPPPPPPPPPPPPPPPiiiiiiiiiiBBBBB")
class Il2CppNumberFormatInfo:
  # Il2CppObject obj;
  obj: Il2CppObject # Format: "PP"

  # Il2CppArray *numberGroupSizes;
  number_group_sizes: int # Format: "P"

  # Il2CppArray *currencyGroupSizes;
  currency_group_sizes: int # Format: "P"

  # Il2CppArray *percentGroupSizes;
  percent_group_sizes: int # Format: "P"

  # Il2CppString *positiveSign;
  positive_sign: int # Format: "P"

  # Il2CppString *negativeSign;
  negative_sign: int # Format: "P"

  # Il2CppString *numberDecimalSeparator;
  number_decimal_separator: int # Format: "P"

  # Il2CppString *numberGroupSeparator;
  number_group_separator: int # Format: "P"

  # Il2CppString *currencyGroupSeparator;
  currency_group_separator: int # Format: "P"

  # Il2CppString *currencyDecimalSeparator;
  currency_decimal_separator: int # Format: "P"

  # Il2CppString *currencySymbol;
  currency_symbol: int # Format: "P"

  # Il2CppString *ansiCurrencySymbol;
  ansi_currency_symbol: int # Format: "P"

  # Il2CppString *naNSymbol;
  na_n_symbol: int # Format: "P"

  # Il2CppString *positiveInfinitySymbol;
  positive_infinity_symbol: int # Format: "P"

  # Il2CppString *negativeInfinitySymbol;
  negative_infinity_symbol: int # Format: "P"

  # Il2CppString *percentDecimalSeparator;
  percent_decimal_separator: int # Format: "P"

  # Il2CppString *percentGroupSeparator;
  percent_group_separator: int # Format: "P"

  # Il2CppString *percentSymbol;
  percent_symbol: int # Format: "P"

  # Il2CppString *perMilleSymbol;
  per_mille_symbol: int # Format: "P"

  # Il2CppArray *nativeDigits;
  native_digits: int # Format: "P"

  # int dataItem;
  data_item: int # Format: "i"

  # int numberDecimalDigits;
  number_decimal_digits: int # Format: "i"

  # int currencyDecimalDigits;
  currency_decimal_digits: int # Format: "i"

  # int currencyPositivePattern;
  currency_positive_pattern: int # Format: "i"

  # int currencyNegativePattern;
  currency_negative_pattern: int # Format: "i"

  # int numberNegativePattern;
  number_negative_pattern: int # Format: "i"

  # int percentPositivePattern;
  percent_positive_pattern: int # Format: "i"

  # int percentNegativePattern;
  percent_negative_pattern: int # Format: "i"

  # int percentDecimalDigits;
  percent_decimal_digits: int # Format: "i"

  # int digitSubstitution;
  digit_substitution: int # Format: "i"

  # uint8_t readOnly;
  read_only: int # Format: "B"

  # uint8_t useUserOverride;
  use_user_override: int # Format: "B"

  # uint8_t isInvariant;
  is_invariant: int # Format: "B"

  # uint8_t validForParseAsNumber;
  valid_for_parse_as_number: int # Format: "B"

  # uint8_t validForParseAsCurrency;
  valid_for_parse_as_currency: int # Format: "B"


# L2044: struct Il2CppCultureData {...};
@dataclass
@cxx3py("PPPPPPPII")
class Il2CppCultureData:
  # Il2CppObject obj;
  obj: Il2CppObject # Format: "PP"

  # Il2CppString *AMDesignator;
  am_designator: int # Format: "P"

  # Il2CppString *PMDesignator;
  pm_designator: int # Format: "P"

  # Il2CppString *TimeSeparator;
  time_separator: int # Format: "P"

  # Il2CppArray *LongTimePatterns;
  long_time_patterns: int # Format: "P"

  # Il2CppArray *ShortTimePatterns;
  short_time_patterns: int # Format: "P"

  # uint32_t FirstDayOfWeek;
  first_day_of_week: int # Format: "I"

  # uint32_t CalendarWeekRule;
  calendar_week_rule: int # Format: "I"


# L2055: struct Il2CppCalendarData {...};
@dataclass
@cxx3py("PPPPPPPPPPPPPPPPP")
class Il2CppCalendarData:
  # Il2CppObject obj;
  obj: Il2CppObject # Format: "PP"

  # Il2CppString *NativeName;
  native_name: int # Format: "P"

  # Il2CppArray *ShortDatePatterns;
  short_date_patterns: int # Format: "P"

  # Il2CppArray *YearMonthPatterns;
  year_month_patterns: int # Format: "P"

  # Il2CppArray *LongDatePatterns;
  long_date_patterns: int # Format: "P"

  # Il2CppString *MonthDayPattern;
  month_day_pattern: int # Format: "P"

  # Il2CppArray *EraNames;
  era_names: int # Format: "P"

  # Il2CppArray *AbbreviatedEraNames;
  abbreviated_era_names: int # Format: "P"

  # Il2CppArray *AbbreviatedEnglishEraNames;
  abbreviated_english_era_names: int # Format: "P"

  # Il2CppArray *DayNames;
  day_names: int # Format: "P"

  # Il2CppArray *AbbreviatedDayNames;
  abbreviated_day_names: int # Format: "P"

  # Il2CppArray *SuperShortDayNames;
  super_short_day_names: int # Format: "P"

  # Il2CppArray *MonthNames;
  month_names: int # Format: "P"

  # Il2CppArray *AbbreviatedMonthNames;
  abbreviated_month_names: int # Format: "P"

  # Il2CppArray *GenitiveMonthNames;
  genitive_month_names: int # Format: "P"

  # Il2CppArray *GenitiveAbbreviatedMonthNames;
  genitive_abbreviated_month_names: int # Format: "P"


# L2074: struct Il2CppCultureInfo {...};
@dataclass
@cxx3py("PPBiiiiiBPPPPPPPPPPPPPiPPBPPB")
class Il2CppCultureInfo:
  # Il2CppObject obj;
  obj: Il2CppObject # Format: "PP"

  # uint8_t is_read_only;
  is_read_only: int # Format: "B"

  # int32_t lcid;
  lcid: int # Format: "i"

  # int32_t parent_lcid;
  parent_lcid: int # Format: "i"

  # int32_t datetime_index;
  datetime_index: int # Format: "i"

  # int32_t number_index;
  number_index: int # Format: "i"

  # int32_t default_calendar_type;
  default_calendar_type: int # Format: "i"

  # uint8_t use_user_override;
  use_user_override: int # Format: "B"

  # Il2CppNumberFormatInfo *number_format;
  number_format: int # Format: "P"

  # Il2CppDateTimeFormatInfo *datetime_format;
  datetime_format: int # Format: "P"

  # Il2CppObject *textinfo;
  textinfo: int # Format: "P"

  # Il2CppString *name;
  name: int # Format: "P"

  # Il2CppString *englishname;
  englishname: int # Format: "P"

  # Il2CppString *nativename;
  nativename: int # Format: "P"

  # Il2CppString *iso3lang;
  iso3lang: int # Format: "P"

  # Il2CppString *iso2lang;
  iso2lang: int # Format: "P"

  # Il2CppString *win3lang;
  win3lang: int # Format: "P"

  # Il2CppString *territory;
  territory: int # Format: "P"

  # Il2CppArray *native_calendar_names;
  native_calendar_names: int # Format: "P"

  # Il2CppString *compareinfo;
  compareinfo: int # Format: "P"

  # const void *text_info_data;
  text_info_data: int # Format: "P"

  # int dataItem;
  data_item: int # Format: "i"

  # Il2CppObject *calendar;
  calendar: int # Format: "P"

  # Il2CppObject *parent_culture;
  parent_culture: int # Format: "P"

  # uint8_t constructed;
  constructed: int # Format: "B"

  # Il2CppArray *cached_serialized_form;
  cached_serialized_form: int # Format: "P"

  # Il2CppObject *cultureData;
  culture_data: int # Format: "P"

  # uint8_t isInherited;
  is_inherited: int # Format: "B"


# L2105: struct Il2CppRegionInfo {...};
@dataclass
@cxx3py("PPiPPPPPPPPP")
class Il2CppRegionInfo:
  # Il2CppObject obj;
  obj: Il2CppObject # Format: "PP"

  # int32_t geo_id;
  geo_id: int # Format: "i"

  # Il2CppString *iso2name;
  iso2name: int # Format: "P"

  # Il2CppString *iso3name;
  iso3name: int # Format: "P"

  # Il2CppString *win3name;
  win3name: int # Format: "P"

  # Il2CppString *english_name;
  english_name: int # Format: "P"

  # Il2CppString *native_name;
  native_name: int # Format: "P"

  # Il2CppString *currency_symbol;
  currency_symbol: int # Format: "P"

  # Il2CppString *iso_currency_symbol;
  iso_currency_symbol: int # Format: "P"

  # Il2CppString *currency_english_name;
  currency_english_name: int # Format: "P"

  # Il2CppString *currency_native_name;
  currency_native_name: int # Format: "P"


# L2119: struct Il2CppSafeHandle {...};
@dataclass
@cxx3py("PPPiBB")
class Il2CppSafeHandle:
  # Il2CppObject base;
  base: Il2CppObject # Format: "PP"

  # void *handle;
  handle: int # Format: "P"

  # int state;
  state: int # Format: "i"

  # uint8_t owns_handle;
  owns_handle: int # Format: "B"

  # uint8_t fullyInitialized;
  fully_initialized: int # Format: "B"


# L2128: struct Il2CppStringBuilder {...};
@dataclass
@cxx3py("PPPPiii")
class Il2CppStringBuilder:
  # Il2CppObject object;
  x_object: Il2CppObject # Format: "PP"

  # Il2CppArray *chunkChars;
  chunk_chars: int # Format: "P"

  # struct Il2CppStringBuilder *chunkPrevious;
  chunk_previous: int # Format: "P"

  # int chunkLength;
  chunk_length: int # Format: "i"

  # int chunkOffset;
  chunk_offset: int # Format: "i"

  # int maxCapacity;
  max_capacity: int # Format: "i"


# L2137: struct Il2CppSocketAddress {...};
@dataclass
@cxx3py("PPiPBi")
class Il2CppSocketAddress:
  # Il2CppObject base;
  base: Il2CppObject # Format: "PP"

  # int m_Size;
  m__size: int # Format: "i"

  # Il2CppArray *data;
  data: int # Format: "P"

  # uint8_t m_changed;
  m_changed: int # Format: "B"

  # int m_hash;
  m_hash: int # Format: "i"


# L2145: struct Il2CppSortKey {...};
@dataclass
@cxx3py("PPPPii")
class Il2CppSortKey:
  # Il2CppObject base;
  base: Il2CppObject # Format: "PP"

  # Il2CppString *str;
  x_str: int # Format: "P"

  # Il2CppArray *key;
  key: int # Format: "P"

  # int32_t options;
  options: int # Format: "i"

  # int32_t lcid;
  lcid: int # Format: "i"


# L2153: struct Il2CppErrorWrapper {...};
@dataclass
@cxx3py("PPi")
class Il2CppErrorWrapper:
  # Il2CppObject base;
  base: Il2CppObject # Format: "PP"

  # int32_t errorCode;
  error_code: int # Format: "i"


# L2158: struct Il2CppAsyncResult {...};
@dataclass
@cxx3py("PPPPPPPBBBPPP")
class Il2CppAsyncResult:
  # Il2CppObject base;
  base: Il2CppObject # Format: "PP"

  # Il2CppObject *async_state;
  async_state: int # Format: "P"

  # Il2CppWaitHandle *handle;
  handle: int # Format: "P"

  # Il2CppDelegate *async_delegate;
  async_delegate: int # Format: "P"

  # void *data;
  data: int # Format: "P"

  # Il2CppAsyncCall *object_data;
  object_data: int # Format: "P"

  # uint8_t sync_completed;
  sync_completed: int # Format: "B"

  # uint8_t completed;
  completed: int # Format: "B"

  # uint8_t endinvoke_called;
  endinvoke_called: int # Format: "B"

  # Il2CppObject *async_callback;
  async_callback: int # Format: "P"

  # Il2CppObject *execution_context;
  execution_context: int # Format: "P"

  # Il2CppObject *original_context;
  original_context: int # Format: "P"


# L2173: struct Il2CppAsyncCall {...};
@dataclass
@cxx3py("PPPPPPPP")
class Il2CppAsyncCall:
  # Il2CppObject base;
  base: Il2CppObject # Format: "PP"

  # Il2CppMethodMessage *msg;
  msg: int # Format: "P"

  # MethodInfo *cb_method;
  cb_method: int # Format: "P"

  # Il2CppDelegate *cb_target;
  cb_target: int # Format: "P"

  # Il2CppObject *state;
  state: int # Format: "P"

  # Il2CppObject *res;
  res: int # Format: "P"

  # Il2CppArray *out_args;
  out_args: int # Format: "P"


# L2184: struct Il2CppExceptionWrapper {...};
@dataclass
@cxx3py("P")
class Il2CppExceptionWrapper:
  # Il2CppException *ex;
  ex: int # Format: "P"


# L2188: struct Il2CppIOAsyncResult {...};
@dataclass
@cxx3py("PPPPPBB")
class Il2CppIOAsyncResult:
  # Il2CppObject base;
  base: Il2CppObject # Format: "PP"

  # Il2CppDelegate *callback;
  callback: int # Format: "P"

  # Il2CppObject *state;
  state: int # Format: "P"

  # Il2CppWaitHandle *wait_handle;
  wait_handle: int # Format: "P"

  # uint8_t completed_synchronously;
  completed_synchronously: int # Format: "B"

  # uint8_t completed;
  completed: int # Format: "B"


# L2197: struct Il2CppSocketAsyncResult {...};
@dataclass
@cxx3py("PPPPPBBPiPPPiiiPPiPBiPiii")
class Il2CppSocketAsyncResult:
  # Il2CppIOAsyncResult base;
  base: Il2CppIOAsyncResult # Format: "PPPPPBB"

  # Il2CppObject *socket;
  socket: int # Format: "P"

  # int32_t operation;
  operation: int # Format: "i"

  # Il2CppException *delayedException;
  delayed_exception: int # Format: "P"

  # Il2CppObject *endPoint;
  end_point: int # Format: "P"

  # Il2CppArray *buffer;
  buffer: int # Format: "P"

  # int32_t offset;
  offset: int # Format: "i"

  # int32_t size;
  size: int # Format: "i"

  # int32_t socket_flags;
  socket_flags: int # Format: "i"

  # Il2CppObject *acceptSocket;
  accept_socket: int # Format: "P"

  # Il2CppArray *addresses;
  addresses: int # Format: "P"

  # int32_t port;
  port: int # Format: "i"

  # Il2CppObject *buffers;
  buffers: int # Format: "P"

  # uint8_t reuseSocket;
  reuse_socket: int # Format: "B"

  # int32_t currentAddress;
  current_address: int # Format: "i"

  # Il2CppObject *acceptedSocket;
  accepted_socket: int # Format: "P"

  # int32_t total;
  total: int # Format: "i"

  # int32_t error;
  error: int # Format: "i"

  # int32_t endCalled;
  end_called: int # Format: "i"


# L2225: struct Il2CppManifestResourceInfo {...};
@dataclass
@cxx3py("PPPPI")
class Il2CppManifestResourceInfo:
  # Il2CppObject object;
  x_object: Il2CppObject # Format: "PP"

  # Il2CppReflectionAssembly *assembly;
  assembly: int # Format: "P"

  # Il2CppString *filename;
  filename: int # Format: "P"

  # uint32_t location;
  location: int # Format: "I"


# L2232: struct Il2CppAppContext {...};
@dataclass
@cxx3py("PPiiP")
class Il2CppAppContext:
  # Il2CppObject obj;
  obj: Il2CppObject # Format: "PP"

  # int32_t domain_id;
  domain_id: int # Format: "i"

  # int32_t context_id;
  context_id: int # Format: "i"

  # void *static_data;
  static_data: int # Format: "P"


# L2239: struct Il2CppDecimal {...};
@dataclass
@cxx3py("HHIL")
class Il2CppDecimal:
  # uint16_t reserved;
  reserved: int # Format: "H"

  # union <anon> {...}; u;
  u: int # Format: "H"

  # uint32_t Hi32;
  hi32: int # Format: "I"

  # union <anon> {...}; v;
  v: int # Format: "L"


# L2262: struct Il2CppDouble {...};
@dataclass
@cxx3py("IIII")
class Il2CppDouble:
  # uint32_t mantLo;
  # Bitfield width: 32
  mant_lo: None # Format: "I"

  # uint32_t mantHi;
  # Bitfield width: 20
  mant_hi: None # Format: "I"

  # uint32_t exp;
  # Bitfield width: 11
  exp: None # Format: "I"

  # uint32_t sign;
  # Bitfield width: 1
  sign: bool # Format: "I"


# L2280: struct Il2CppSingle {...};
@dataclass
@cxx3py("III")
class Il2CppSingle:
  # uint32_t mant;
  # Bitfield width: 23
  mant: None # Format: "I"

  # uint32_t exp;
  # Bitfield width: 8
  exp: None # Format: "I"

  # uint32_t sign;
  # Bitfield width: 1
  sign: bool # Format: "I"



